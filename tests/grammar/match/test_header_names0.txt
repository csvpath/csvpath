[
                starts_with(#0, "#") -> @runid.notnone = regex( /Run ID: ([0-9]*)/, #0, 1 )
                starts_with(#0, "#") -> @userid.notnone = regex( /User: ([a-zA-Z0-9]*)/, #0, 1 )

                skip( lt(count_headers_in_line(), 9) )

                @header_change = mismatch("signed")
                gt( @header_change, 9) ->
                      reset_headers(
                        print("
Resetting headers to: $.csvpath.headers"))

                print.onchange.once(
                    "
Number of headers changed by $.variables.header_change",
                        print("See line $.csvpath.line_number", skip()))

                not( in( #category, "OFFICE|COMPUTING|FURNITURE|PRINT|FOOD|OTHER" ) ) ->
                    print( "
Bad category $.headers.category at line $.csvpath.count_lines ", fail())


                not( exact( end(), /\$?(\d*\.\d{0,2})/ ) ) ->
                    print("
Bad price $.headers.'a price' at line  $.csvpath.count_lines", fail())

                not( #SKU ) -> print("
No SKU at line $.csvpath.count_lines in $.csvpath.headers", fail())
                not( #UPC ) -> print("
No UPC at line $.csvpath.count_lines", fail())

            ]