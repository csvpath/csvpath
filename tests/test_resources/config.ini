[csvpath_files]
extensions = txt, csvpath, csvpaths

[csv_files]
extensions = txt, csv, before

[errors]
csvpath = raise
csvpaths = raise, collect, quiet
use_format = full
pattern = {time}:{file}:{line}:{paths}:{instance}:{chain}:  {message}

[logging]
csvpath = info
csvpaths = info
log_file = logs/csvpath.log
log_files_to_keep = 100
log_file_size = 52428800

[listeners]
groups =
#slack, marquez, ckan, sftp, otlp, default, etc.


# this simple default listener tracks all files staged in a manifest. unlike other manifest
# writers, if it has multiple concurrent users it has a race condition. you should vet it
# against your use case; its potential utility vs. the modest but non-0 risk of lost updates.
# it can be disabled with little loss of function. alternatively a database-backed version
# may be available.
default.file = from csvpath.managers.files.files_listener import FilesListener
default.paths = from csvpath.managers.paths.paths_listener import PathsListener

sftpplus.paths = from csvpath.managers.integrations.sftpplus.sftpplus_listener import SftpPlusListener

otlp.result = from csvpath.managers.integrations.otlp.otlp_result_listener import OpenTelemetryResultListener
otlp.results = from csvpath.managers.integrations.otlp.otlp_results_listener import OpenTelemetryResultsListener
otlp.errors = from csvpath.managers.integrations.otlp.otlp_error_listener import OpenTelemetryErrorListener

# add sftp to the list of groups above to push results to an sftp account
sftp.results = from csvpath.managers.integrations.sftp.sftp_listener import SftpListener

# add ckan to the list of groups above for alerts to slack webhooks
ckan.results = from csvpath.managers.integrations.ckan.ckan_listener import CkanListener

#add marquez to the list of groups above for OpenLineage events to a Marquez server
marquez.file = from csvpath.managers.integrations.ol.file_listener_ol import OpenLineageFileListener
marquez.paths = from csvpath.managers.integrations.ol.paths_listener_ol import OpenLineagePathsListener
marquez.result = from csvpath.managers.integrations.ol.result_listener_ol import OpenLineageResultListener
marquez.results = from csvpath.managers.integrations.ol.results_listener_ol import OpenLineageResultsListener

# add slack to the list of groups above for alerts to slack webhooks
slack.file = from csvpath.managers.integrations.slack.sender import SlackSender
slack.paths = from csvpath.managers.integrations.slack.sender import SlackSender
slack.result = from csvpath.managers.integrations.slack.sender import SlackSender
slack.results = from csvpath.managers.integrations.slack.sender import SlackSender

[sftpplus]
# these are only needed by the csvpath writer
mailbox_user = MAILBOX_USER
mailbox_password = MAILBOX_PASSWORD
server = SFTPPLUS_SERVER
port = SFTPPLUS_PORT
# these are only needed on the server
admin_username = SFTPPLUS_ADMIN_USERNAME
admin_password = SFTPPLUS_ADMIN_PASSWORD
api_url = https://localhost:10020/json
scripts_dir =
execute_timeout = 300

[marquez]
base_url = http://localhost:5000
endpoint = api/v1/lineage
api_key = "none"
timeout = 5
verify = False

[slack]
# add your main webhook here. to set webhooks on a csvpath-by-csvpath basis add
# on-valid-slack: webhook-minus-'https://' and/or
# on-invalid-slack: webhook-minus-'https://'
webhook_url =

[config]
path =

[functions]
imports = tests/test_resources/function.imports

[results]
archive = archive
transfers = transfers

[inputs]
files = inputs/named_files
csvpaths = inputs/named_paths
on_unmatched_file_fingerprints = halt

