Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> match_part
Rule 1     match_part -> LEFT_BRACKET expression RIGHT_BRACKET
Rule 2     match_part -> LEFT_BRACKET expressions RIGHT_BRACKET
Rule 3     expressions -> expression
Rule 4     expressions -> expressions expression
Rule 5     expression -> function
Rule 6     expression -> equality
Rule 7     expression -> header
Rule 8     function -> NAME OPEN_PAREN CLOSE_PAREN
Rule 9     function -> NAME OPEN_PAREN equality CLOSE_PAREN
Rule 10    function -> NAME OPEN_PAREN function CLOSE_PAREN
Rule 11    equality -> function EQUALS term
Rule 12    equality -> var_or_header EQUALS term
Rule 13    equality -> var_or_header EQUALS var_or_header
Rule 14    equality -> term EQUALS var_or_header
Rule 15    equality -> term EQUALS function
Rule 16    equality -> var_or_header EQUALS function
Rule 17    equality -> var EQUALS header
Rule 18    term -> QUOTE NAME QUOTE
Rule 19    term -> NUMBER
Rule 20    term -> REGEX
Rule 21    var_or_header -> header
Rule 22    var_or_header -> var
Rule 23    var -> VAR_SYM NAME
Rule 24    header -> HEADER_SYM NAME
Rule 25    header -> HEADER_SYM NUMBER

Terminals, with rules where they appear

CLOSE_PAREN          : 8 9 10
EQUALS               : 11 12 13 14 15 16 17
HEADER_SYM           : 24 25
LEFT_BRACKET         : 1 2
NAME                 : 8 9 10 18 23 24
NUMBER               : 19 25
OPEN_PAREN           : 8 9 10
QUOTE                : 18 18
REGEX                : 20
RIGHT_BRACKET        : 1 2
VAR_SYM              : 23
error                : 

Nonterminals, with rules where they appear

equality             : 6 9
expression           : 1 3 4
expressions          : 2 4
function             : 5 10 11 15 16
header               : 7 17 21
match_part           : 0
term                 : 11 12 14 15
var                  : 17 22
var_or_header        : 12 13 13 14 16

Parsing method: LALR

state 0

    (0) S' -> . match_part
    (1) match_part -> . LEFT_BRACKET expression RIGHT_BRACKET
    (2) match_part -> . LEFT_BRACKET expressions RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 2

    match_part                     shift and go to state 1

state 1

    (0) S' -> match_part .



state 2

    (1) match_part -> LEFT_BRACKET . expression RIGHT_BRACKET
    (2) match_part -> LEFT_BRACKET . expressions RIGHT_BRACKET
    (5) expression -> . function
    (6) expression -> . equality
    (7) expression -> . header
    (3) expressions -> . expression
    (4) expressions -> . expressions expression
    (8) function -> . NAME OPEN_PAREN CLOSE_PAREN
    (9) function -> . NAME OPEN_PAREN equality CLOSE_PAREN
    (10) function -> . NAME OPEN_PAREN function CLOSE_PAREN
    (11) equality -> . function EQUALS term
    (12) equality -> . var_or_header EQUALS term
    (13) equality -> . var_or_header EQUALS var_or_header
    (14) equality -> . term EQUALS var_or_header
    (15) equality -> . term EQUALS function
    (16) equality -> . var_or_header EQUALS function
    (17) equality -> . var EQUALS header
    (24) header -> . HEADER_SYM NAME
    (25) header -> . HEADER_SYM NUMBER
    (21) var_or_header -> . header
    (22) var_or_header -> . var
    (18) term -> . QUOTE NAME QUOTE
    (19) term -> . NUMBER
    (20) term -> . REGEX
    (23) var -> . VAR_SYM NAME

    NAME            shift and go to state 8
    HEADER_SYM      shift and go to state 12
    QUOTE           shift and go to state 14
    NUMBER          shift and go to state 13
    REGEX           shift and go to state 15
    VAR_SYM         shift and go to state 16

    expression                     shift and go to state 3
    expressions                    shift and go to state 4
    function                       shift and go to state 5
    equality                       shift and go to state 6
    header                         shift and go to state 7
    term                           shift and go to state 9
    var_or_header                  shift and go to state 10
    var                            shift and go to state 11

state 3

    (1) match_part -> LEFT_BRACKET expression . RIGHT_BRACKET
    (3) expressions -> expression .

  ! shift/reduce conflict for RIGHT_BRACKET resolved as shift
    RIGHT_BRACKET   shift and go to state 17
    NAME            reduce using rule 3 (expressions -> expression .)
    HEADER_SYM      reduce using rule 3 (expressions -> expression .)
    QUOTE           reduce using rule 3 (expressions -> expression .)
    NUMBER          reduce using rule 3 (expressions -> expression .)
    REGEX           reduce using rule 3 (expressions -> expression .)
    VAR_SYM         reduce using rule 3 (expressions -> expression .)

  ! RIGHT_BRACKET   [ reduce using rule 3 (expressions -> expression .) ]


state 4

    (2) match_part -> LEFT_BRACKET expressions . RIGHT_BRACKET
    (4) expressions -> expressions . expression
    (5) expression -> . function
    (6) expression -> . equality
    (7) expression -> . header
    (8) function -> . NAME OPEN_PAREN CLOSE_PAREN
    (9) function -> . NAME OPEN_PAREN equality CLOSE_PAREN
    (10) function -> . NAME OPEN_PAREN function CLOSE_PAREN
    (11) equality -> . function EQUALS term
    (12) equality -> . var_or_header EQUALS term
    (13) equality -> . var_or_header EQUALS var_or_header
    (14) equality -> . term EQUALS var_or_header
    (15) equality -> . term EQUALS function
    (16) equality -> . var_or_header EQUALS function
    (17) equality -> . var EQUALS header
    (24) header -> . HEADER_SYM NAME
    (25) header -> . HEADER_SYM NUMBER
    (21) var_or_header -> . header
    (22) var_or_header -> . var
    (18) term -> . QUOTE NAME QUOTE
    (19) term -> . NUMBER
    (20) term -> . REGEX
    (23) var -> . VAR_SYM NAME

    RIGHT_BRACKET   shift and go to state 18
    NAME            shift and go to state 8
    HEADER_SYM      shift and go to state 12
    QUOTE           shift and go to state 14
    NUMBER          shift and go to state 13
    REGEX           shift and go to state 15
    VAR_SYM         shift and go to state 16

    expression                     shift and go to state 19
    function                       shift and go to state 5
    equality                       shift and go to state 6
    header                         shift and go to state 7
    term                           shift and go to state 9
    var_or_header                  shift and go to state 10
    var                            shift and go to state 11

state 5

    (5) expression -> function .
    (11) equality -> function . EQUALS term

    RIGHT_BRACKET   reduce using rule 5 (expression -> function .)
    NAME            reduce using rule 5 (expression -> function .)
    HEADER_SYM      reduce using rule 5 (expression -> function .)
    QUOTE           reduce using rule 5 (expression -> function .)
    NUMBER          reduce using rule 5 (expression -> function .)
    REGEX           reduce using rule 5 (expression -> function .)
    VAR_SYM         reduce using rule 5 (expression -> function .)
    EQUALS          shift and go to state 20


state 6

    (6) expression -> equality .

    RIGHT_BRACKET   reduce using rule 6 (expression -> equality .)
    NAME            reduce using rule 6 (expression -> equality .)
    HEADER_SYM      reduce using rule 6 (expression -> equality .)
    QUOTE           reduce using rule 6 (expression -> equality .)
    NUMBER          reduce using rule 6 (expression -> equality .)
    REGEX           reduce using rule 6 (expression -> equality .)
    VAR_SYM         reduce using rule 6 (expression -> equality .)


state 7

    (7) expression -> header .
    (21) var_or_header -> header .

    RIGHT_BRACKET   reduce using rule 7 (expression -> header .)
    NAME            reduce using rule 7 (expression -> header .)
    HEADER_SYM      reduce using rule 7 (expression -> header .)
    QUOTE           reduce using rule 7 (expression -> header .)
    NUMBER          reduce using rule 7 (expression -> header .)
    REGEX           reduce using rule 7 (expression -> header .)
    VAR_SYM         reduce using rule 7 (expression -> header .)
    EQUALS          reduce using rule 21 (var_or_header -> header .)


state 8

    (8) function -> NAME . OPEN_PAREN CLOSE_PAREN
    (9) function -> NAME . OPEN_PAREN equality CLOSE_PAREN
    (10) function -> NAME . OPEN_PAREN function CLOSE_PAREN

    OPEN_PAREN      shift and go to state 21


state 9

    (14) equality -> term . EQUALS var_or_header
    (15) equality -> term . EQUALS function

    EQUALS          shift and go to state 22


state 10

    (12) equality -> var_or_header . EQUALS term
    (13) equality -> var_or_header . EQUALS var_or_header
    (16) equality -> var_or_header . EQUALS function

    EQUALS          shift and go to state 23


state 11

    (17) equality -> var . EQUALS header
    (22) var_or_header -> var .

  ! shift/reduce conflict for EQUALS resolved as shift
    EQUALS          shift and go to state 24

  ! EQUALS          [ reduce using rule 22 (var_or_header -> var .) ]


state 12

    (24) header -> HEADER_SYM . NAME
    (25) header -> HEADER_SYM . NUMBER

    NAME            shift and go to state 25
    NUMBER          shift and go to state 26


state 13

    (19) term -> NUMBER .

    EQUALS          reduce using rule 19 (term -> NUMBER .)
    RIGHT_BRACKET   reduce using rule 19 (term -> NUMBER .)
    NAME            reduce using rule 19 (term -> NUMBER .)
    HEADER_SYM      reduce using rule 19 (term -> NUMBER .)
    QUOTE           reduce using rule 19 (term -> NUMBER .)
    NUMBER          reduce using rule 19 (term -> NUMBER .)
    REGEX           reduce using rule 19 (term -> NUMBER .)
    VAR_SYM         reduce using rule 19 (term -> NUMBER .)
    CLOSE_PAREN     reduce using rule 19 (term -> NUMBER .)


state 14

    (18) term -> QUOTE . NAME QUOTE

    NAME            shift and go to state 27


state 15

    (20) term -> REGEX .

    EQUALS          reduce using rule 20 (term -> REGEX .)
    RIGHT_BRACKET   reduce using rule 20 (term -> REGEX .)
    NAME            reduce using rule 20 (term -> REGEX .)
    HEADER_SYM      reduce using rule 20 (term -> REGEX .)
    QUOTE           reduce using rule 20 (term -> REGEX .)
    NUMBER          reduce using rule 20 (term -> REGEX .)
    REGEX           reduce using rule 20 (term -> REGEX .)
    VAR_SYM         reduce using rule 20 (term -> REGEX .)
    CLOSE_PAREN     reduce using rule 20 (term -> REGEX .)


state 16

    (23) var -> VAR_SYM . NAME

    NAME            shift and go to state 28


state 17

    (1) match_part -> LEFT_BRACKET expression RIGHT_BRACKET .

    $end            reduce using rule 1 (match_part -> LEFT_BRACKET expression RIGHT_BRACKET .)


state 18

    (2) match_part -> LEFT_BRACKET expressions RIGHT_BRACKET .

    $end            reduce using rule 2 (match_part -> LEFT_BRACKET expressions RIGHT_BRACKET .)


state 19

    (4) expressions -> expressions expression .

    RIGHT_BRACKET   reduce using rule 4 (expressions -> expressions expression .)
    NAME            reduce using rule 4 (expressions -> expressions expression .)
    HEADER_SYM      reduce using rule 4 (expressions -> expressions expression .)
    QUOTE           reduce using rule 4 (expressions -> expressions expression .)
    NUMBER          reduce using rule 4 (expressions -> expressions expression .)
    REGEX           reduce using rule 4 (expressions -> expressions expression .)
    VAR_SYM         reduce using rule 4 (expressions -> expressions expression .)


state 20

    (11) equality -> function EQUALS . term
    (18) term -> . QUOTE NAME QUOTE
    (19) term -> . NUMBER
    (20) term -> . REGEX

    QUOTE           shift and go to state 14
    NUMBER          shift and go to state 13
    REGEX           shift and go to state 15

    term                           shift and go to state 29

state 21

    (8) function -> NAME OPEN_PAREN . CLOSE_PAREN
    (9) function -> NAME OPEN_PAREN . equality CLOSE_PAREN
    (10) function -> NAME OPEN_PAREN . function CLOSE_PAREN
    (11) equality -> . function EQUALS term
    (12) equality -> . var_or_header EQUALS term
    (13) equality -> . var_or_header EQUALS var_or_header
    (14) equality -> . term EQUALS var_or_header
    (15) equality -> . term EQUALS function
    (16) equality -> . var_or_header EQUALS function
    (17) equality -> . var EQUALS header
    (8) function -> . NAME OPEN_PAREN CLOSE_PAREN
    (9) function -> . NAME OPEN_PAREN equality CLOSE_PAREN
    (10) function -> . NAME OPEN_PAREN function CLOSE_PAREN
    (21) var_or_header -> . header
    (22) var_or_header -> . var
    (18) term -> . QUOTE NAME QUOTE
    (19) term -> . NUMBER
    (20) term -> . REGEX
    (23) var -> . VAR_SYM NAME
    (24) header -> . HEADER_SYM NAME
    (25) header -> . HEADER_SYM NUMBER

    CLOSE_PAREN     shift and go to state 30
    NAME            shift and go to state 8
    QUOTE           shift and go to state 14
    NUMBER          shift and go to state 13
    REGEX           shift and go to state 15
    VAR_SYM         shift and go to state 16
    HEADER_SYM      shift and go to state 12

    equality                       shift and go to state 31
    function                       shift and go to state 32
    term                           shift and go to state 9
    var_or_header                  shift and go to state 10
    var                            shift and go to state 11
    header                         shift and go to state 33

state 22

    (14) equality -> term EQUALS . var_or_header
    (15) equality -> term EQUALS . function
    (21) var_or_header -> . header
    (22) var_or_header -> . var
    (8) function -> . NAME OPEN_PAREN CLOSE_PAREN
    (9) function -> . NAME OPEN_PAREN equality CLOSE_PAREN
    (10) function -> . NAME OPEN_PAREN function CLOSE_PAREN
    (24) header -> . HEADER_SYM NAME
    (25) header -> . HEADER_SYM NUMBER
    (23) var -> . VAR_SYM NAME

    NAME            shift and go to state 8
    HEADER_SYM      shift and go to state 12
    VAR_SYM         shift and go to state 16

    var_or_header                  shift and go to state 34
    function                       shift and go to state 35
    header                         shift and go to state 33
    var                            shift and go to state 36

state 23

    (12) equality -> var_or_header EQUALS . term
    (13) equality -> var_or_header EQUALS . var_or_header
    (16) equality -> var_or_header EQUALS . function
    (18) term -> . QUOTE NAME QUOTE
    (19) term -> . NUMBER
    (20) term -> . REGEX
    (21) var_or_header -> . header
    (22) var_or_header -> . var
    (8) function -> . NAME OPEN_PAREN CLOSE_PAREN
    (9) function -> . NAME OPEN_PAREN equality CLOSE_PAREN
    (10) function -> . NAME OPEN_PAREN function CLOSE_PAREN
    (24) header -> . HEADER_SYM NAME
    (25) header -> . HEADER_SYM NUMBER
    (23) var -> . VAR_SYM NAME

    QUOTE           shift and go to state 14
    NUMBER          shift and go to state 13
    REGEX           shift and go to state 15
    NAME            shift and go to state 8
    HEADER_SYM      shift and go to state 12
    VAR_SYM         shift and go to state 16

    var_or_header                  shift and go to state 37
    term                           shift and go to state 38
    function                       shift and go to state 39
    header                         shift and go to state 33
    var                            shift and go to state 36

state 24

    (17) equality -> var EQUALS . header
    (24) header -> . HEADER_SYM NAME
    (25) header -> . HEADER_SYM NUMBER

    HEADER_SYM      shift and go to state 12

    header                         shift and go to state 40

state 25

    (24) header -> HEADER_SYM NAME .

    RIGHT_BRACKET   reduce using rule 24 (header -> HEADER_SYM NAME .)
    NAME            reduce using rule 24 (header -> HEADER_SYM NAME .)
    HEADER_SYM      reduce using rule 24 (header -> HEADER_SYM NAME .)
    QUOTE           reduce using rule 24 (header -> HEADER_SYM NAME .)
    NUMBER          reduce using rule 24 (header -> HEADER_SYM NAME .)
    REGEX           reduce using rule 24 (header -> HEADER_SYM NAME .)
    VAR_SYM         reduce using rule 24 (header -> HEADER_SYM NAME .)
    EQUALS          reduce using rule 24 (header -> HEADER_SYM NAME .)
    CLOSE_PAREN     reduce using rule 24 (header -> HEADER_SYM NAME .)


state 26

    (25) header -> HEADER_SYM NUMBER .

    RIGHT_BRACKET   reduce using rule 25 (header -> HEADER_SYM NUMBER .)
    NAME            reduce using rule 25 (header -> HEADER_SYM NUMBER .)
    HEADER_SYM      reduce using rule 25 (header -> HEADER_SYM NUMBER .)
    QUOTE           reduce using rule 25 (header -> HEADER_SYM NUMBER .)
    NUMBER          reduce using rule 25 (header -> HEADER_SYM NUMBER .)
    REGEX           reduce using rule 25 (header -> HEADER_SYM NUMBER .)
    VAR_SYM         reduce using rule 25 (header -> HEADER_SYM NUMBER .)
    EQUALS          reduce using rule 25 (header -> HEADER_SYM NUMBER .)
    CLOSE_PAREN     reduce using rule 25 (header -> HEADER_SYM NUMBER .)


state 27

    (18) term -> QUOTE NAME . QUOTE

    QUOTE           shift and go to state 41


state 28

    (23) var -> VAR_SYM NAME .

    EQUALS          reduce using rule 23 (var -> VAR_SYM NAME .)
    RIGHT_BRACKET   reduce using rule 23 (var -> VAR_SYM NAME .)
    NAME            reduce using rule 23 (var -> VAR_SYM NAME .)
    HEADER_SYM      reduce using rule 23 (var -> VAR_SYM NAME .)
    QUOTE           reduce using rule 23 (var -> VAR_SYM NAME .)
    NUMBER          reduce using rule 23 (var -> VAR_SYM NAME .)
    REGEX           reduce using rule 23 (var -> VAR_SYM NAME .)
    VAR_SYM         reduce using rule 23 (var -> VAR_SYM NAME .)
    CLOSE_PAREN     reduce using rule 23 (var -> VAR_SYM NAME .)


state 29

    (11) equality -> function EQUALS term .

    RIGHT_BRACKET   reduce using rule 11 (equality -> function EQUALS term .)
    NAME            reduce using rule 11 (equality -> function EQUALS term .)
    HEADER_SYM      reduce using rule 11 (equality -> function EQUALS term .)
    QUOTE           reduce using rule 11 (equality -> function EQUALS term .)
    NUMBER          reduce using rule 11 (equality -> function EQUALS term .)
    REGEX           reduce using rule 11 (equality -> function EQUALS term .)
    VAR_SYM         reduce using rule 11 (equality -> function EQUALS term .)
    CLOSE_PAREN     reduce using rule 11 (equality -> function EQUALS term .)


state 30

    (8) function -> NAME OPEN_PAREN CLOSE_PAREN .

    EQUALS          reduce using rule 8 (function -> NAME OPEN_PAREN CLOSE_PAREN .)
    RIGHT_BRACKET   reduce using rule 8 (function -> NAME OPEN_PAREN CLOSE_PAREN .)
    NAME            reduce using rule 8 (function -> NAME OPEN_PAREN CLOSE_PAREN .)
    HEADER_SYM      reduce using rule 8 (function -> NAME OPEN_PAREN CLOSE_PAREN .)
    QUOTE           reduce using rule 8 (function -> NAME OPEN_PAREN CLOSE_PAREN .)
    NUMBER          reduce using rule 8 (function -> NAME OPEN_PAREN CLOSE_PAREN .)
    REGEX           reduce using rule 8 (function -> NAME OPEN_PAREN CLOSE_PAREN .)
    VAR_SYM         reduce using rule 8 (function -> NAME OPEN_PAREN CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 8 (function -> NAME OPEN_PAREN CLOSE_PAREN .)


state 31

    (9) function -> NAME OPEN_PAREN equality . CLOSE_PAREN

    CLOSE_PAREN     shift and go to state 42


state 32

    (10) function -> NAME OPEN_PAREN function . CLOSE_PAREN
    (11) equality -> function . EQUALS term

    CLOSE_PAREN     shift and go to state 43
    EQUALS          shift and go to state 20


state 33

    (21) var_or_header -> header .

    EQUALS          reduce using rule 21 (var_or_header -> header .)
    RIGHT_BRACKET   reduce using rule 21 (var_or_header -> header .)
    NAME            reduce using rule 21 (var_or_header -> header .)
    HEADER_SYM      reduce using rule 21 (var_or_header -> header .)
    QUOTE           reduce using rule 21 (var_or_header -> header .)
    NUMBER          reduce using rule 21 (var_or_header -> header .)
    REGEX           reduce using rule 21 (var_or_header -> header .)
    VAR_SYM         reduce using rule 21 (var_or_header -> header .)
    CLOSE_PAREN     reduce using rule 21 (var_or_header -> header .)


state 34

    (14) equality -> term EQUALS var_or_header .

    RIGHT_BRACKET   reduce using rule 14 (equality -> term EQUALS var_or_header .)
    NAME            reduce using rule 14 (equality -> term EQUALS var_or_header .)
    HEADER_SYM      reduce using rule 14 (equality -> term EQUALS var_or_header .)
    QUOTE           reduce using rule 14 (equality -> term EQUALS var_or_header .)
    NUMBER          reduce using rule 14 (equality -> term EQUALS var_or_header .)
    REGEX           reduce using rule 14 (equality -> term EQUALS var_or_header .)
    VAR_SYM         reduce using rule 14 (equality -> term EQUALS var_or_header .)
    CLOSE_PAREN     reduce using rule 14 (equality -> term EQUALS var_or_header .)


state 35

    (15) equality -> term EQUALS function .

    RIGHT_BRACKET   reduce using rule 15 (equality -> term EQUALS function .)
    NAME            reduce using rule 15 (equality -> term EQUALS function .)
    HEADER_SYM      reduce using rule 15 (equality -> term EQUALS function .)
    QUOTE           reduce using rule 15 (equality -> term EQUALS function .)
    NUMBER          reduce using rule 15 (equality -> term EQUALS function .)
    REGEX           reduce using rule 15 (equality -> term EQUALS function .)
    VAR_SYM         reduce using rule 15 (equality -> term EQUALS function .)
    CLOSE_PAREN     reduce using rule 15 (equality -> term EQUALS function .)


state 36

    (22) var_or_header -> var .

    RIGHT_BRACKET   reduce using rule 22 (var_or_header -> var .)
    NAME            reduce using rule 22 (var_or_header -> var .)
    HEADER_SYM      reduce using rule 22 (var_or_header -> var .)
    QUOTE           reduce using rule 22 (var_or_header -> var .)
    NUMBER          reduce using rule 22 (var_or_header -> var .)
    REGEX           reduce using rule 22 (var_or_header -> var .)
    VAR_SYM         reduce using rule 22 (var_or_header -> var .)
    CLOSE_PAREN     reduce using rule 22 (var_or_header -> var .)


state 37

    (13) equality -> var_or_header EQUALS var_or_header .

    RIGHT_BRACKET   reduce using rule 13 (equality -> var_or_header EQUALS var_or_header .)
    NAME            reduce using rule 13 (equality -> var_or_header EQUALS var_or_header .)
    HEADER_SYM      reduce using rule 13 (equality -> var_or_header EQUALS var_or_header .)
    QUOTE           reduce using rule 13 (equality -> var_or_header EQUALS var_or_header .)
    NUMBER          reduce using rule 13 (equality -> var_or_header EQUALS var_or_header .)
    REGEX           reduce using rule 13 (equality -> var_or_header EQUALS var_or_header .)
    VAR_SYM         reduce using rule 13 (equality -> var_or_header EQUALS var_or_header .)
    CLOSE_PAREN     reduce using rule 13 (equality -> var_or_header EQUALS var_or_header .)


state 38

    (12) equality -> var_or_header EQUALS term .

    RIGHT_BRACKET   reduce using rule 12 (equality -> var_or_header EQUALS term .)
    NAME            reduce using rule 12 (equality -> var_or_header EQUALS term .)
    HEADER_SYM      reduce using rule 12 (equality -> var_or_header EQUALS term .)
    QUOTE           reduce using rule 12 (equality -> var_or_header EQUALS term .)
    NUMBER          reduce using rule 12 (equality -> var_or_header EQUALS term .)
    REGEX           reduce using rule 12 (equality -> var_or_header EQUALS term .)
    VAR_SYM         reduce using rule 12 (equality -> var_or_header EQUALS term .)
    CLOSE_PAREN     reduce using rule 12 (equality -> var_or_header EQUALS term .)


state 39

    (16) equality -> var_or_header EQUALS function .

    RIGHT_BRACKET   reduce using rule 16 (equality -> var_or_header EQUALS function .)
    NAME            reduce using rule 16 (equality -> var_or_header EQUALS function .)
    HEADER_SYM      reduce using rule 16 (equality -> var_or_header EQUALS function .)
    QUOTE           reduce using rule 16 (equality -> var_or_header EQUALS function .)
    NUMBER          reduce using rule 16 (equality -> var_or_header EQUALS function .)
    REGEX           reduce using rule 16 (equality -> var_or_header EQUALS function .)
    VAR_SYM         reduce using rule 16 (equality -> var_or_header EQUALS function .)
    CLOSE_PAREN     reduce using rule 16 (equality -> var_or_header EQUALS function .)


state 40

    (17) equality -> var EQUALS header .

    RIGHT_BRACKET   reduce using rule 17 (equality -> var EQUALS header .)
    NAME            reduce using rule 17 (equality -> var EQUALS header .)
    HEADER_SYM      reduce using rule 17 (equality -> var EQUALS header .)
    QUOTE           reduce using rule 17 (equality -> var EQUALS header .)
    NUMBER          reduce using rule 17 (equality -> var EQUALS header .)
    REGEX           reduce using rule 17 (equality -> var EQUALS header .)
    VAR_SYM         reduce using rule 17 (equality -> var EQUALS header .)
    CLOSE_PAREN     reduce using rule 17 (equality -> var EQUALS header .)


state 41

    (18) term -> QUOTE NAME QUOTE .

    EQUALS          reduce using rule 18 (term -> QUOTE NAME QUOTE .)
    RIGHT_BRACKET   reduce using rule 18 (term -> QUOTE NAME QUOTE .)
    NAME            reduce using rule 18 (term -> QUOTE NAME QUOTE .)
    HEADER_SYM      reduce using rule 18 (term -> QUOTE NAME QUOTE .)
    QUOTE           reduce using rule 18 (term -> QUOTE NAME QUOTE .)
    NUMBER          reduce using rule 18 (term -> QUOTE NAME QUOTE .)
    REGEX           reduce using rule 18 (term -> QUOTE NAME QUOTE .)
    VAR_SYM         reduce using rule 18 (term -> QUOTE NAME QUOTE .)
    CLOSE_PAREN     reduce using rule 18 (term -> QUOTE NAME QUOTE .)


state 42

    (9) function -> NAME OPEN_PAREN equality CLOSE_PAREN .

    EQUALS          reduce using rule 9 (function -> NAME OPEN_PAREN equality CLOSE_PAREN .)
    RIGHT_BRACKET   reduce using rule 9 (function -> NAME OPEN_PAREN equality CLOSE_PAREN .)
    NAME            reduce using rule 9 (function -> NAME OPEN_PAREN equality CLOSE_PAREN .)
    HEADER_SYM      reduce using rule 9 (function -> NAME OPEN_PAREN equality CLOSE_PAREN .)
    QUOTE           reduce using rule 9 (function -> NAME OPEN_PAREN equality CLOSE_PAREN .)
    NUMBER          reduce using rule 9 (function -> NAME OPEN_PAREN equality CLOSE_PAREN .)
    REGEX           reduce using rule 9 (function -> NAME OPEN_PAREN equality CLOSE_PAREN .)
    VAR_SYM         reduce using rule 9 (function -> NAME OPEN_PAREN equality CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 9 (function -> NAME OPEN_PAREN equality CLOSE_PAREN .)


state 43

    (10) function -> NAME OPEN_PAREN function CLOSE_PAREN .

    EQUALS          reduce using rule 10 (function -> NAME OPEN_PAREN function CLOSE_PAREN .)
    RIGHT_BRACKET   reduce using rule 10 (function -> NAME OPEN_PAREN function CLOSE_PAREN .)
    NAME            reduce using rule 10 (function -> NAME OPEN_PAREN function CLOSE_PAREN .)
    HEADER_SYM      reduce using rule 10 (function -> NAME OPEN_PAREN function CLOSE_PAREN .)
    QUOTE           reduce using rule 10 (function -> NAME OPEN_PAREN function CLOSE_PAREN .)
    NUMBER          reduce using rule 10 (function -> NAME OPEN_PAREN function CLOSE_PAREN .)
    REGEX           reduce using rule 10 (function -> NAME OPEN_PAREN function CLOSE_PAREN .)
    VAR_SYM         reduce using rule 10 (function -> NAME OPEN_PAREN function CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 10 (function -> NAME OPEN_PAREN function CLOSE_PAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RIGHT_BRACKET in state 3 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 11 resolved as shift
