Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NAME
    NAME_LINE

Grammar

Rule 0     S' -> match_part
Rule 1     match_part -> LEFT_BRACKET expression RIGHT_BRACKET
Rule 2     match_part -> LEFT_BRACKET expressions RIGHT_BRACKET
Rule 3     expressions -> expression
Rule 4     expressions -> expression COMMENT
Rule 5     expressions -> expressions expression
Rule 6     expressions -> COMMENT expressions
Rule 7     expressions -> expressions COMMENT
Rule 8     expression -> function
Rule 9     expression -> assignment_or_equality
Rule 10    function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
Rule 11    function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
Rule 12    function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
Rule 13    function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
Rule 14    function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
Rule 15    assignment_or_equality -> equality
Rule 16    assignment_or_equality -> assignment
Rule 17    equality -> function op term
Rule 18    equality -> function op function
Rule 19    equality -> function op var_or_header
Rule 20    equality -> function DO assignment_or_equality
Rule 21    equality -> var DO assignment_or_equality
Rule 22    equality -> var DO function
Rule 23    equality -> function DO function
Rule 24    equality -> equality DO assignment_or_equality
Rule 25    equality -> equality DO function
Rule 26    equality -> var_or_header op function
Rule 27    equality -> var_or_header op term
Rule 28    equality -> var_or_header op var_or_header
Rule 29    equality -> term op var_or_header
Rule 30    equality -> term op term
Rule 31    equality -> term op function
Rule 32    equality -> equality COMMA equality
Rule 33    equality -> equality op term
Rule 34    equality -> equality op function
Rule 35    equality -> equality COMMA var_or_header
Rule 36    equality -> equality COMMA term
Rule 37    equality -> equality COMMA function
Rule 38    op -> EQUALS
Rule 39    op -> LT
Rule 40    op -> GT
Rule 41    op -> STAR
Rule 42    op -> PLUS
Rule 43    op -> MINUS
Rule 44    op -> COMMA
Rule 45    assignment -> var ASSIGNMENT var
Rule 46    assignment -> var ASSIGNMENT term
Rule 47    assignment -> var ASSIGNMENT function
Rule 48    assignment -> var ASSIGNMENT header
Rule 49    term -> QUOTED
Rule 50    term -> QUOTE DATE QUOTE
Rule 51    term -> QUOTE NUMBER QUOTE
Rule 52    term -> NUMBER
Rule 53    term -> REGEX
Rule 54    var_or_header -> header
Rule 55    var_or_header -> var
Rule 56    var -> VAR_SYM SIMPLE_NAME
Rule 57    header -> HEADER_SYM SIMPLE_NAME
Rule 58    header -> HEADER_SYM NUMBER
Rule 59    header -> HEADER_SYM QUOTED

Terminals, with rules where they appear

ASSIGNMENT           : 45 46 47 48
CLOSE_PAREN          : 10 11 12 13 14
COMMA                : 32 35 36 37 44
COMMENT              : 4 6 7
DATE                 : 50
DO                   : 20 21 22 23 24 25
EQUALS               : 38
GT                   : 40
HEADER_SYM           : 57 58 59
LEFT_BRACKET         : 1 2
LT                   : 39
MINUS                : 43
NAME                 : 
NAME_LINE            : 
NUMBER               : 51 52 58
OPEN_PAREN           : 10 11 12 13 14
PLUS                 : 42
QUOTE                : 50 50 51 51
QUOTED               : 49 59
REGEX                : 53
RIGHT_BRACKET        : 1 2
SIMPLE_NAME          : 10 11 12 13 14 56 57
STAR                 : 41
VAR_SYM              : 56
error                : 

Nonterminals, with rules where they appear

assignment           : 16
assignment_or_equality : 9 20 21 24
equality             : 11 15 24 25 32 32 33 34 35 36 37
expression           : 1 3 4 5
expressions          : 2 5 6 7
function             : 8 12 17 18 18 19 20 22 23 23 25 26 31 34 37 47
header               : 48 54
match_part           : 0
op                   : 17 18 19 26 27 28 29 30 31 33 34
term                 : 13 17 27 29 30 30 31 33 36 46
var                  : 21 22 45 45 46 47 48 55
var_or_header        : 14 19 26 27 28 28 29 35

Parsing method: LALR

state 0

    (0) S' -> . match_part
    (1) match_part -> . LEFT_BRACKET expression RIGHT_BRACKET
    (2) match_part -> . LEFT_BRACKET expressions RIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 2

    match_part                     shift and go to state 1

state 1

    (0) S' -> match_part .



state 2

    (1) match_part -> LEFT_BRACKET . expression RIGHT_BRACKET
    (2) match_part -> LEFT_BRACKET . expressions RIGHT_BRACKET
    (8) expression -> . function
    (9) expression -> . assignment_or_equality
    (3) expressions -> . expression
    (4) expressions -> . expression COMMENT
    (5) expressions -> . expressions expression
    (6) expressions -> . COMMENT expressions
    (7) expressions -> . expressions COMMENT
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (15) assignment_or_equality -> . equality
    (16) assignment_or_equality -> . assignment
    (17) equality -> . function op term
    (18) equality -> . function op function
    (19) equality -> . function op var_or_header
    (20) equality -> . function DO assignment_or_equality
    (21) equality -> . var DO assignment_or_equality
    (22) equality -> . var DO function
    (23) equality -> . function DO function
    (24) equality -> . equality DO assignment_or_equality
    (25) equality -> . equality DO function
    (26) equality -> . var_or_header op function
    (27) equality -> . var_or_header op term
    (28) equality -> . var_or_header op var_or_header
    (29) equality -> . term op var_or_header
    (30) equality -> . term op term
    (31) equality -> . term op function
    (32) equality -> . equality COMMA equality
    (33) equality -> . equality op term
    (34) equality -> . equality op function
    (35) equality -> . equality COMMA var_or_header
    (36) equality -> . equality COMMA term
    (37) equality -> . equality COMMA function
    (45) assignment -> . var ASSIGNMENT var
    (46) assignment -> . var ASSIGNMENT term
    (47) assignment -> . var ASSIGNMENT function
    (48) assignment -> . var ASSIGNMENT header
    (56) var -> . VAR_SYM SIMPLE_NAME
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED

    COMMENT         shift and go to state 7
    SIMPLE_NAME     shift and go to state 8
    VAR_SYM         shift and go to state 15
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    HEADER_SYM      shift and go to state 20

    expression                     shift and go to state 3
    expressions                    shift and go to state 4
    function                       shift and go to state 5
    assignment_or_equality         shift and go to state 6
    equality                       shift and go to state 9
    term                           shift and go to state 10
    var_or_header                  shift and go to state 11
    assignment                     shift and go to state 12
    var                            shift and go to state 13
    header                         shift and go to state 14

state 3

    (1) match_part -> LEFT_BRACKET expression . RIGHT_BRACKET
    (3) expressions -> expression .
    (4) expressions -> expression . COMMENT

  ! shift/reduce conflict for RIGHT_BRACKET resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
    RIGHT_BRACKET   shift and go to state 21
    SIMPLE_NAME     reduce using rule 3 (expressions -> expression .)
    VAR_SYM         reduce using rule 3 (expressions -> expression .)
    QUOTED          reduce using rule 3 (expressions -> expression .)
    QUOTE           reduce using rule 3 (expressions -> expression .)
    NUMBER          reduce using rule 3 (expressions -> expression .)
    REGEX           reduce using rule 3 (expressions -> expression .)
    HEADER_SYM      reduce using rule 3 (expressions -> expression .)
    COMMENT         shift and go to state 22

  ! RIGHT_BRACKET   [ reduce using rule 3 (expressions -> expression .) ]
  ! COMMENT         [ reduce using rule 3 (expressions -> expression .) ]


state 4

    (2) match_part -> LEFT_BRACKET expressions . RIGHT_BRACKET
    (5) expressions -> expressions . expression
    (7) expressions -> expressions . COMMENT
    (8) expression -> . function
    (9) expression -> . assignment_or_equality
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (15) assignment_or_equality -> . equality
    (16) assignment_or_equality -> . assignment
    (17) equality -> . function op term
    (18) equality -> . function op function
    (19) equality -> . function op var_or_header
    (20) equality -> . function DO assignment_or_equality
    (21) equality -> . var DO assignment_or_equality
    (22) equality -> . var DO function
    (23) equality -> . function DO function
    (24) equality -> . equality DO assignment_or_equality
    (25) equality -> . equality DO function
    (26) equality -> . var_or_header op function
    (27) equality -> . var_or_header op term
    (28) equality -> . var_or_header op var_or_header
    (29) equality -> . term op var_or_header
    (30) equality -> . term op term
    (31) equality -> . term op function
    (32) equality -> . equality COMMA equality
    (33) equality -> . equality op term
    (34) equality -> . equality op function
    (35) equality -> . equality COMMA var_or_header
    (36) equality -> . equality COMMA term
    (37) equality -> . equality COMMA function
    (45) assignment -> . var ASSIGNMENT var
    (46) assignment -> . var ASSIGNMENT term
    (47) assignment -> . var ASSIGNMENT function
    (48) assignment -> . var ASSIGNMENT header
    (56) var -> . VAR_SYM SIMPLE_NAME
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED

    RIGHT_BRACKET   shift and go to state 23
    COMMENT         shift and go to state 25
    SIMPLE_NAME     shift and go to state 8
    VAR_SYM         shift and go to state 15
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    HEADER_SYM      shift and go to state 20

    expression                     shift and go to state 24
    function                       shift and go to state 5
    assignment_or_equality         shift and go to state 6
    equality                       shift and go to state 9
    term                           shift and go to state 10
    var_or_header                  shift and go to state 11
    assignment                     shift and go to state 12
    var                            shift and go to state 13
    header                         shift and go to state 14

state 5

    (8) expression -> function .
    (17) equality -> function . op term
    (18) equality -> function . op function
    (19) equality -> function . op var_or_header
    (20) equality -> function . DO assignment_or_equality
    (23) equality -> function . DO function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

    RIGHT_BRACKET   reduce using rule 8 (expression -> function .)
    COMMENT         reduce using rule 8 (expression -> function .)
    SIMPLE_NAME     reduce using rule 8 (expression -> function .)
    VAR_SYM         reduce using rule 8 (expression -> function .)
    QUOTED          reduce using rule 8 (expression -> function .)
    QUOTE           reduce using rule 8 (expression -> function .)
    NUMBER          reduce using rule 8 (expression -> function .)
    REGEX           reduce using rule 8 (expression -> function .)
    HEADER_SYM      reduce using rule 8 (expression -> function .)
    DO              shift and go to state 27
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

    op                             shift and go to state 26

state 6

    (9) expression -> assignment_or_equality .

    RIGHT_BRACKET   reduce using rule 9 (expression -> assignment_or_equality .)
    COMMENT         reduce using rule 9 (expression -> assignment_or_equality .)
    SIMPLE_NAME     reduce using rule 9 (expression -> assignment_or_equality .)
    VAR_SYM         reduce using rule 9 (expression -> assignment_or_equality .)
    QUOTED          reduce using rule 9 (expression -> assignment_or_equality .)
    QUOTE           reduce using rule 9 (expression -> assignment_or_equality .)
    NUMBER          reduce using rule 9 (expression -> assignment_or_equality .)
    REGEX           reduce using rule 9 (expression -> assignment_or_equality .)
    HEADER_SYM      reduce using rule 9 (expression -> assignment_or_equality .)


state 7

    (6) expressions -> COMMENT . expressions
    (3) expressions -> . expression
    (4) expressions -> . expression COMMENT
    (5) expressions -> . expressions expression
    (6) expressions -> . COMMENT expressions
    (7) expressions -> . expressions COMMENT
    (8) expression -> . function
    (9) expression -> . assignment_or_equality
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (15) assignment_or_equality -> . equality
    (16) assignment_or_equality -> . assignment
    (17) equality -> . function op term
    (18) equality -> . function op function
    (19) equality -> . function op var_or_header
    (20) equality -> . function DO assignment_or_equality
    (21) equality -> . var DO assignment_or_equality
    (22) equality -> . var DO function
    (23) equality -> . function DO function
    (24) equality -> . equality DO assignment_or_equality
    (25) equality -> . equality DO function
    (26) equality -> . var_or_header op function
    (27) equality -> . var_or_header op term
    (28) equality -> . var_or_header op var_or_header
    (29) equality -> . term op var_or_header
    (30) equality -> . term op term
    (31) equality -> . term op function
    (32) equality -> . equality COMMA equality
    (33) equality -> . equality op term
    (34) equality -> . equality op function
    (35) equality -> . equality COMMA var_or_header
    (36) equality -> . equality COMMA term
    (37) equality -> . equality COMMA function
    (45) assignment -> . var ASSIGNMENT var
    (46) assignment -> . var ASSIGNMENT term
    (47) assignment -> . var ASSIGNMENT function
    (48) assignment -> . var ASSIGNMENT header
    (56) var -> . VAR_SYM SIMPLE_NAME
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED

    COMMENT         shift and go to state 7
    SIMPLE_NAME     shift and go to state 8
    VAR_SYM         shift and go to state 15
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    HEADER_SYM      shift and go to state 20

    expressions                    shift and go to state 35
    expression                     shift and go to state 36
    function                       shift and go to state 5
    assignment_or_equality         shift and go to state 6
    equality                       shift and go to state 9
    term                           shift and go to state 10
    var_or_header                  shift and go to state 11
    assignment                     shift and go to state 12
    var                            shift and go to state 13
    header                         shift and go to state 14

state 8

    (10) function -> SIMPLE_NAME . OPEN_PAREN CLOSE_PAREN
    (11) function -> SIMPLE_NAME . OPEN_PAREN equality CLOSE_PAREN
    (12) function -> SIMPLE_NAME . OPEN_PAREN function CLOSE_PAREN
    (13) function -> SIMPLE_NAME . OPEN_PAREN term CLOSE_PAREN
    (14) function -> SIMPLE_NAME . OPEN_PAREN var_or_header CLOSE_PAREN

    OPEN_PAREN      shift and go to state 37


state 9

    (15) assignment_or_equality -> equality .
    (24) equality -> equality . DO assignment_or_equality
    (25) equality -> equality . DO function
    (32) equality -> equality . COMMA equality
    (33) equality -> equality . op term
    (34) equality -> equality . op function
    (35) equality -> equality . COMMA var_or_header
    (36) equality -> equality . COMMA term
    (37) equality -> equality . COMMA function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    RIGHT_BRACKET   reduce using rule 15 (assignment_or_equality -> equality .)
    COMMENT         reduce using rule 15 (assignment_or_equality -> equality .)
    SIMPLE_NAME     reduce using rule 15 (assignment_or_equality -> equality .)
    VAR_SYM         reduce using rule 15 (assignment_or_equality -> equality .)
    QUOTED          reduce using rule 15 (assignment_or_equality -> equality .)
    QUOTE           reduce using rule 15 (assignment_or_equality -> equality .)
    NUMBER          reduce using rule 15 (assignment_or_equality -> equality .)
    REGEX           reduce using rule 15 (assignment_or_equality -> equality .)
    HEADER_SYM      reduce using rule 15 (assignment_or_equality -> equality .)
    CLOSE_PAREN     reduce using rule 15 (assignment_or_equality -> equality .)
    DO              shift and go to state 38
    COMMA           shift and go to state 39
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33

  ! DO              [ reduce using rule 15 (assignment_or_equality -> equality .) ]
  ! COMMA           [ reduce using rule 15 (assignment_or_equality -> equality .) ]
  ! EQUALS          [ reduce using rule 15 (assignment_or_equality -> equality .) ]
  ! LT              [ reduce using rule 15 (assignment_or_equality -> equality .) ]
  ! GT              [ reduce using rule 15 (assignment_or_equality -> equality .) ]
  ! STAR            [ reduce using rule 15 (assignment_or_equality -> equality .) ]
  ! PLUS            [ reduce using rule 15 (assignment_or_equality -> equality .) ]
  ! MINUS           [ reduce using rule 15 (assignment_or_equality -> equality .) ]

    op                             shift and go to state 40

state 10

    (29) equality -> term . op var_or_header
    (30) equality -> term . op term
    (31) equality -> term . op function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

    op                             shift and go to state 41

state 11

    (26) equality -> var_or_header . op function
    (27) equality -> var_or_header . op term
    (28) equality -> var_or_header . op var_or_header
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

    op                             shift and go to state 42

state 12

    (16) assignment_or_equality -> assignment .

    RIGHT_BRACKET   reduce using rule 16 (assignment_or_equality -> assignment .)
    COMMENT         reduce using rule 16 (assignment_or_equality -> assignment .)
    SIMPLE_NAME     reduce using rule 16 (assignment_or_equality -> assignment .)
    VAR_SYM         reduce using rule 16 (assignment_or_equality -> assignment .)
    QUOTED          reduce using rule 16 (assignment_or_equality -> assignment .)
    QUOTE           reduce using rule 16 (assignment_or_equality -> assignment .)
    NUMBER          reduce using rule 16 (assignment_or_equality -> assignment .)
    REGEX           reduce using rule 16 (assignment_or_equality -> assignment .)
    HEADER_SYM      reduce using rule 16 (assignment_or_equality -> assignment .)
    DO              reduce using rule 16 (assignment_or_equality -> assignment .)
    COMMA           reduce using rule 16 (assignment_or_equality -> assignment .)
    EQUALS          reduce using rule 16 (assignment_or_equality -> assignment .)
    LT              reduce using rule 16 (assignment_or_equality -> assignment .)
    GT              reduce using rule 16 (assignment_or_equality -> assignment .)
    STAR            reduce using rule 16 (assignment_or_equality -> assignment .)
    PLUS            reduce using rule 16 (assignment_or_equality -> assignment .)
    MINUS           reduce using rule 16 (assignment_or_equality -> assignment .)
    CLOSE_PAREN     reduce using rule 16 (assignment_or_equality -> assignment .)


state 13

    (21) equality -> var . DO assignment_or_equality
    (22) equality -> var . DO function
    (45) assignment -> var . ASSIGNMENT var
    (46) assignment -> var . ASSIGNMENT term
    (47) assignment -> var . ASSIGNMENT function
    (48) assignment -> var . ASSIGNMENT header
    (55) var_or_header -> var .

    DO              shift and go to state 43
    ASSIGNMENT      shift and go to state 44
    EQUALS          reduce using rule 55 (var_or_header -> var .)
    LT              reduce using rule 55 (var_or_header -> var .)
    GT              reduce using rule 55 (var_or_header -> var .)
    STAR            reduce using rule 55 (var_or_header -> var .)
    PLUS            reduce using rule 55 (var_or_header -> var .)
    MINUS           reduce using rule 55 (var_or_header -> var .)
    COMMA           reduce using rule 55 (var_or_header -> var .)


state 14

    (54) var_or_header -> header .

    EQUALS          reduce using rule 54 (var_or_header -> header .)
    LT              reduce using rule 54 (var_or_header -> header .)
    GT              reduce using rule 54 (var_or_header -> header .)
    STAR            reduce using rule 54 (var_or_header -> header .)
    PLUS            reduce using rule 54 (var_or_header -> header .)
    MINUS           reduce using rule 54 (var_or_header -> header .)
    COMMA           reduce using rule 54 (var_or_header -> header .)
    DO              reduce using rule 54 (var_or_header -> header .)
    RIGHT_BRACKET   reduce using rule 54 (var_or_header -> header .)
    COMMENT         reduce using rule 54 (var_or_header -> header .)
    SIMPLE_NAME     reduce using rule 54 (var_or_header -> header .)
    VAR_SYM         reduce using rule 54 (var_or_header -> header .)
    QUOTED          reduce using rule 54 (var_or_header -> header .)
    QUOTE           reduce using rule 54 (var_or_header -> header .)
    NUMBER          reduce using rule 54 (var_or_header -> header .)
    REGEX           reduce using rule 54 (var_or_header -> header .)
    HEADER_SYM      reduce using rule 54 (var_or_header -> header .)
    CLOSE_PAREN     reduce using rule 54 (var_or_header -> header .)


state 15

    (56) var -> VAR_SYM . SIMPLE_NAME

    SIMPLE_NAME     shift and go to state 45


state 16

    (49) term -> QUOTED .

    EQUALS          reduce using rule 49 (term -> QUOTED .)
    LT              reduce using rule 49 (term -> QUOTED .)
    GT              reduce using rule 49 (term -> QUOTED .)
    STAR            reduce using rule 49 (term -> QUOTED .)
    PLUS            reduce using rule 49 (term -> QUOTED .)
    MINUS           reduce using rule 49 (term -> QUOTED .)
    COMMA           reduce using rule 49 (term -> QUOTED .)
    DO              reduce using rule 49 (term -> QUOTED .)
    RIGHT_BRACKET   reduce using rule 49 (term -> QUOTED .)
    COMMENT         reduce using rule 49 (term -> QUOTED .)
    SIMPLE_NAME     reduce using rule 49 (term -> QUOTED .)
    VAR_SYM         reduce using rule 49 (term -> QUOTED .)
    QUOTED          reduce using rule 49 (term -> QUOTED .)
    QUOTE           reduce using rule 49 (term -> QUOTED .)
    NUMBER          reduce using rule 49 (term -> QUOTED .)
    REGEX           reduce using rule 49 (term -> QUOTED .)
    HEADER_SYM      reduce using rule 49 (term -> QUOTED .)
    CLOSE_PAREN     reduce using rule 49 (term -> QUOTED .)


state 17

    (50) term -> QUOTE . DATE QUOTE
    (51) term -> QUOTE . NUMBER QUOTE

    DATE            shift and go to state 46
    NUMBER          shift and go to state 47


state 18

    (52) term -> NUMBER .

    EQUALS          reduce using rule 52 (term -> NUMBER .)
    LT              reduce using rule 52 (term -> NUMBER .)
    GT              reduce using rule 52 (term -> NUMBER .)
    STAR            reduce using rule 52 (term -> NUMBER .)
    PLUS            reduce using rule 52 (term -> NUMBER .)
    MINUS           reduce using rule 52 (term -> NUMBER .)
    COMMA           reduce using rule 52 (term -> NUMBER .)
    DO              reduce using rule 52 (term -> NUMBER .)
    RIGHT_BRACKET   reduce using rule 52 (term -> NUMBER .)
    COMMENT         reduce using rule 52 (term -> NUMBER .)
    SIMPLE_NAME     reduce using rule 52 (term -> NUMBER .)
    VAR_SYM         reduce using rule 52 (term -> NUMBER .)
    QUOTED          reduce using rule 52 (term -> NUMBER .)
    QUOTE           reduce using rule 52 (term -> NUMBER .)
    NUMBER          reduce using rule 52 (term -> NUMBER .)
    REGEX           reduce using rule 52 (term -> NUMBER .)
    HEADER_SYM      reduce using rule 52 (term -> NUMBER .)
    CLOSE_PAREN     reduce using rule 52 (term -> NUMBER .)


state 19

    (53) term -> REGEX .

    EQUALS          reduce using rule 53 (term -> REGEX .)
    LT              reduce using rule 53 (term -> REGEX .)
    GT              reduce using rule 53 (term -> REGEX .)
    STAR            reduce using rule 53 (term -> REGEX .)
    PLUS            reduce using rule 53 (term -> REGEX .)
    MINUS           reduce using rule 53 (term -> REGEX .)
    COMMA           reduce using rule 53 (term -> REGEX .)
    DO              reduce using rule 53 (term -> REGEX .)
    RIGHT_BRACKET   reduce using rule 53 (term -> REGEX .)
    COMMENT         reduce using rule 53 (term -> REGEX .)
    SIMPLE_NAME     reduce using rule 53 (term -> REGEX .)
    VAR_SYM         reduce using rule 53 (term -> REGEX .)
    QUOTED          reduce using rule 53 (term -> REGEX .)
    QUOTE           reduce using rule 53 (term -> REGEX .)
    NUMBER          reduce using rule 53 (term -> REGEX .)
    REGEX           reduce using rule 53 (term -> REGEX .)
    HEADER_SYM      reduce using rule 53 (term -> REGEX .)
    CLOSE_PAREN     reduce using rule 53 (term -> REGEX .)


state 20

    (57) header -> HEADER_SYM . SIMPLE_NAME
    (58) header -> HEADER_SYM . NUMBER
    (59) header -> HEADER_SYM . QUOTED

    SIMPLE_NAME     shift and go to state 48
    NUMBER          shift and go to state 49
    QUOTED          shift and go to state 50


state 21

    (1) match_part -> LEFT_BRACKET expression RIGHT_BRACKET .

    $end            reduce using rule 1 (match_part -> LEFT_BRACKET expression RIGHT_BRACKET .)


state 22

    (4) expressions -> expression COMMENT .

    RIGHT_BRACKET   reduce using rule 4 (expressions -> expression COMMENT .)
    COMMENT         reduce using rule 4 (expressions -> expression COMMENT .)
    SIMPLE_NAME     reduce using rule 4 (expressions -> expression COMMENT .)
    VAR_SYM         reduce using rule 4 (expressions -> expression COMMENT .)
    QUOTED          reduce using rule 4 (expressions -> expression COMMENT .)
    QUOTE           reduce using rule 4 (expressions -> expression COMMENT .)
    NUMBER          reduce using rule 4 (expressions -> expression COMMENT .)
    REGEX           reduce using rule 4 (expressions -> expression COMMENT .)
    HEADER_SYM      reduce using rule 4 (expressions -> expression COMMENT .)


state 23

    (2) match_part -> LEFT_BRACKET expressions RIGHT_BRACKET .

    $end            reduce using rule 2 (match_part -> LEFT_BRACKET expressions RIGHT_BRACKET .)


state 24

    (5) expressions -> expressions expression .

    RIGHT_BRACKET   reduce using rule 5 (expressions -> expressions expression .)
    COMMENT         reduce using rule 5 (expressions -> expressions expression .)
    SIMPLE_NAME     reduce using rule 5 (expressions -> expressions expression .)
    VAR_SYM         reduce using rule 5 (expressions -> expressions expression .)
    QUOTED          reduce using rule 5 (expressions -> expressions expression .)
    QUOTE           reduce using rule 5 (expressions -> expressions expression .)
    NUMBER          reduce using rule 5 (expressions -> expressions expression .)
    REGEX           reduce using rule 5 (expressions -> expressions expression .)
    HEADER_SYM      reduce using rule 5 (expressions -> expressions expression .)


state 25

    (7) expressions -> expressions COMMENT .

    RIGHT_BRACKET   reduce using rule 7 (expressions -> expressions COMMENT .)
    COMMENT         reduce using rule 7 (expressions -> expressions COMMENT .)
    SIMPLE_NAME     reduce using rule 7 (expressions -> expressions COMMENT .)
    VAR_SYM         reduce using rule 7 (expressions -> expressions COMMENT .)
    QUOTED          reduce using rule 7 (expressions -> expressions COMMENT .)
    QUOTE           reduce using rule 7 (expressions -> expressions COMMENT .)
    NUMBER          reduce using rule 7 (expressions -> expressions COMMENT .)
    REGEX           reduce using rule 7 (expressions -> expressions COMMENT .)
    HEADER_SYM      reduce using rule 7 (expressions -> expressions COMMENT .)


state 26

    (17) equality -> function op . term
    (18) equality -> function op . function
    (19) equality -> function op . var_or_header
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED
    (56) var -> . VAR_SYM SIMPLE_NAME

    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    SIMPLE_NAME     shift and go to state 8
    HEADER_SYM      shift and go to state 20
    VAR_SYM         shift and go to state 15

    function                       shift and go to state 51
    term                           shift and go to state 52
    var_or_header                  shift and go to state 53
    header                         shift and go to state 14
    var                            shift and go to state 54

state 27

    (20) equality -> function DO . assignment_or_equality
    (23) equality -> function DO . function
    (15) assignment_or_equality -> . equality
    (16) assignment_or_equality -> . assignment
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (17) equality -> . function op term
    (18) equality -> . function op function
    (19) equality -> . function op var_or_header
    (20) equality -> . function DO assignment_or_equality
    (21) equality -> . var DO assignment_or_equality
    (22) equality -> . var DO function
    (23) equality -> . function DO function
    (24) equality -> . equality DO assignment_or_equality
    (25) equality -> . equality DO function
    (26) equality -> . var_or_header op function
    (27) equality -> . var_or_header op term
    (28) equality -> . var_or_header op var_or_header
    (29) equality -> . term op var_or_header
    (30) equality -> . term op term
    (31) equality -> . term op function
    (32) equality -> . equality COMMA equality
    (33) equality -> . equality op term
    (34) equality -> . equality op function
    (35) equality -> . equality COMMA var_or_header
    (36) equality -> . equality COMMA term
    (37) equality -> . equality COMMA function
    (45) assignment -> . var ASSIGNMENT var
    (46) assignment -> . var ASSIGNMENT term
    (47) assignment -> . var ASSIGNMENT function
    (48) assignment -> . var ASSIGNMENT header
    (56) var -> . VAR_SYM SIMPLE_NAME
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED

    SIMPLE_NAME     shift and go to state 8
    VAR_SYM         shift and go to state 15
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    HEADER_SYM      shift and go to state 20

    function                       shift and go to state 55
    assignment_or_equality         shift and go to state 56
    equality                       shift and go to state 9
    assignment                     shift and go to state 12
    term                           shift and go to state 10
    var_or_header                  shift and go to state 11
    var                            shift and go to state 13
    header                         shift and go to state 14

state 28

    (38) op -> EQUALS .

    QUOTED          reduce using rule 38 (op -> EQUALS .)
    QUOTE           reduce using rule 38 (op -> EQUALS .)
    NUMBER          reduce using rule 38 (op -> EQUALS .)
    REGEX           reduce using rule 38 (op -> EQUALS .)
    SIMPLE_NAME     reduce using rule 38 (op -> EQUALS .)
    HEADER_SYM      reduce using rule 38 (op -> EQUALS .)
    VAR_SYM         reduce using rule 38 (op -> EQUALS .)


state 29

    (39) op -> LT .

    QUOTED          reduce using rule 39 (op -> LT .)
    QUOTE           reduce using rule 39 (op -> LT .)
    NUMBER          reduce using rule 39 (op -> LT .)
    REGEX           reduce using rule 39 (op -> LT .)
    SIMPLE_NAME     reduce using rule 39 (op -> LT .)
    HEADER_SYM      reduce using rule 39 (op -> LT .)
    VAR_SYM         reduce using rule 39 (op -> LT .)


state 30

    (40) op -> GT .

    QUOTED          reduce using rule 40 (op -> GT .)
    QUOTE           reduce using rule 40 (op -> GT .)
    NUMBER          reduce using rule 40 (op -> GT .)
    REGEX           reduce using rule 40 (op -> GT .)
    SIMPLE_NAME     reduce using rule 40 (op -> GT .)
    HEADER_SYM      reduce using rule 40 (op -> GT .)
    VAR_SYM         reduce using rule 40 (op -> GT .)


state 31

    (41) op -> STAR .

    QUOTED          reduce using rule 41 (op -> STAR .)
    QUOTE           reduce using rule 41 (op -> STAR .)
    NUMBER          reduce using rule 41 (op -> STAR .)
    REGEX           reduce using rule 41 (op -> STAR .)
    SIMPLE_NAME     reduce using rule 41 (op -> STAR .)
    HEADER_SYM      reduce using rule 41 (op -> STAR .)
    VAR_SYM         reduce using rule 41 (op -> STAR .)


state 32

    (42) op -> PLUS .

    QUOTED          reduce using rule 42 (op -> PLUS .)
    QUOTE           reduce using rule 42 (op -> PLUS .)
    NUMBER          reduce using rule 42 (op -> PLUS .)
    REGEX           reduce using rule 42 (op -> PLUS .)
    SIMPLE_NAME     reduce using rule 42 (op -> PLUS .)
    HEADER_SYM      reduce using rule 42 (op -> PLUS .)
    VAR_SYM         reduce using rule 42 (op -> PLUS .)


state 33

    (43) op -> MINUS .

    QUOTED          reduce using rule 43 (op -> MINUS .)
    QUOTE           reduce using rule 43 (op -> MINUS .)
    NUMBER          reduce using rule 43 (op -> MINUS .)
    REGEX           reduce using rule 43 (op -> MINUS .)
    SIMPLE_NAME     reduce using rule 43 (op -> MINUS .)
    HEADER_SYM      reduce using rule 43 (op -> MINUS .)
    VAR_SYM         reduce using rule 43 (op -> MINUS .)


state 34

    (44) op -> COMMA .

    QUOTED          reduce using rule 44 (op -> COMMA .)
    QUOTE           reduce using rule 44 (op -> COMMA .)
    NUMBER          reduce using rule 44 (op -> COMMA .)
    REGEX           reduce using rule 44 (op -> COMMA .)
    SIMPLE_NAME     reduce using rule 44 (op -> COMMA .)
    HEADER_SYM      reduce using rule 44 (op -> COMMA .)
    VAR_SYM         reduce using rule 44 (op -> COMMA .)


state 35

    (6) expressions -> COMMENT expressions .
    (5) expressions -> expressions . expression
    (7) expressions -> expressions . COMMENT
    (8) expression -> . function
    (9) expression -> . assignment_or_equality
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (15) assignment_or_equality -> . equality
    (16) assignment_or_equality -> . assignment
    (17) equality -> . function op term
    (18) equality -> . function op function
    (19) equality -> . function op var_or_header
    (20) equality -> . function DO assignment_or_equality
    (21) equality -> . var DO assignment_or_equality
    (22) equality -> . var DO function
    (23) equality -> . function DO function
    (24) equality -> . equality DO assignment_or_equality
    (25) equality -> . equality DO function
    (26) equality -> . var_or_header op function
    (27) equality -> . var_or_header op term
    (28) equality -> . var_or_header op var_or_header
    (29) equality -> . term op var_or_header
    (30) equality -> . term op term
    (31) equality -> . term op function
    (32) equality -> . equality COMMA equality
    (33) equality -> . equality op term
    (34) equality -> . equality op function
    (35) equality -> . equality COMMA var_or_header
    (36) equality -> . equality COMMA term
    (37) equality -> . equality COMMA function
    (45) assignment -> . var ASSIGNMENT var
    (46) assignment -> . var ASSIGNMENT term
    (47) assignment -> . var ASSIGNMENT function
    (48) assignment -> . var ASSIGNMENT header
    (56) var -> . VAR_SYM SIMPLE_NAME
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED

  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for SIMPLE_NAME resolved as shift
  ! shift/reduce conflict for VAR_SYM resolved as shift
  ! shift/reduce conflict for QUOTED resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for REGEX resolved as shift
  ! shift/reduce conflict for HEADER_SYM resolved as shift
    RIGHT_BRACKET   reduce using rule 6 (expressions -> COMMENT expressions .)
    COMMENT         shift and go to state 25
    SIMPLE_NAME     shift and go to state 8
    VAR_SYM         shift and go to state 15
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    HEADER_SYM      shift and go to state 20

  ! COMMENT         [ reduce using rule 6 (expressions -> COMMENT expressions .) ]
  ! SIMPLE_NAME     [ reduce using rule 6 (expressions -> COMMENT expressions .) ]
  ! VAR_SYM         [ reduce using rule 6 (expressions -> COMMENT expressions .) ]
  ! QUOTED          [ reduce using rule 6 (expressions -> COMMENT expressions .) ]
  ! QUOTE           [ reduce using rule 6 (expressions -> COMMENT expressions .) ]
  ! NUMBER          [ reduce using rule 6 (expressions -> COMMENT expressions .) ]
  ! REGEX           [ reduce using rule 6 (expressions -> COMMENT expressions .) ]
  ! HEADER_SYM      [ reduce using rule 6 (expressions -> COMMENT expressions .) ]

    expression                     shift and go to state 24
    function                       shift and go to state 5
    assignment_or_equality         shift and go to state 6
    equality                       shift and go to state 9
    term                           shift and go to state 10
    var_or_header                  shift and go to state 11
    assignment                     shift and go to state 12
    var                            shift and go to state 13
    header                         shift and go to state 14

state 36

    (3) expressions -> expression .
    (4) expressions -> expression . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    SIMPLE_NAME     reduce using rule 3 (expressions -> expression .)
    VAR_SYM         reduce using rule 3 (expressions -> expression .)
    QUOTED          reduce using rule 3 (expressions -> expression .)
    QUOTE           reduce using rule 3 (expressions -> expression .)
    NUMBER          reduce using rule 3 (expressions -> expression .)
    REGEX           reduce using rule 3 (expressions -> expression .)
    HEADER_SYM      reduce using rule 3 (expressions -> expression .)
    RIGHT_BRACKET   reduce using rule 3 (expressions -> expression .)
    COMMENT         shift and go to state 22

  ! COMMENT         [ reduce using rule 3 (expressions -> expression .) ]


state 37

    (10) function -> SIMPLE_NAME OPEN_PAREN . CLOSE_PAREN
    (11) function -> SIMPLE_NAME OPEN_PAREN . equality CLOSE_PAREN
    (12) function -> SIMPLE_NAME OPEN_PAREN . function CLOSE_PAREN
    (13) function -> SIMPLE_NAME OPEN_PAREN . term CLOSE_PAREN
    (14) function -> SIMPLE_NAME OPEN_PAREN . var_or_header CLOSE_PAREN
    (17) equality -> . function op term
    (18) equality -> . function op function
    (19) equality -> . function op var_or_header
    (20) equality -> . function DO assignment_or_equality
    (21) equality -> . var DO assignment_or_equality
    (22) equality -> . var DO function
    (23) equality -> . function DO function
    (24) equality -> . equality DO assignment_or_equality
    (25) equality -> . equality DO function
    (26) equality -> . var_or_header op function
    (27) equality -> . var_or_header op term
    (28) equality -> . var_or_header op var_or_header
    (29) equality -> . term op var_or_header
    (30) equality -> . term op term
    (31) equality -> . term op function
    (32) equality -> . equality COMMA equality
    (33) equality -> . equality op term
    (34) equality -> . equality op function
    (35) equality -> . equality COMMA var_or_header
    (36) equality -> . equality COMMA term
    (37) equality -> . equality COMMA function
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (56) var -> . VAR_SYM SIMPLE_NAME
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED

    CLOSE_PAREN     shift and go to state 57
    SIMPLE_NAME     shift and go to state 8
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    VAR_SYM         shift and go to state 15
    HEADER_SYM      shift and go to state 20

    equality                       shift and go to state 58
    function                       shift and go to state 59
    term                           shift and go to state 60
    var_or_header                  shift and go to state 61
    var                            shift and go to state 62
    header                         shift and go to state 14

state 38

    (24) equality -> equality DO . assignment_or_equality
    (25) equality -> equality DO . function
    (15) assignment_or_equality -> . equality
    (16) assignment_or_equality -> . assignment
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (17) equality -> . function op term
    (18) equality -> . function op function
    (19) equality -> . function op var_or_header
    (20) equality -> . function DO assignment_or_equality
    (21) equality -> . var DO assignment_or_equality
    (22) equality -> . var DO function
    (23) equality -> . function DO function
    (24) equality -> . equality DO assignment_or_equality
    (25) equality -> . equality DO function
    (26) equality -> . var_or_header op function
    (27) equality -> . var_or_header op term
    (28) equality -> . var_or_header op var_or_header
    (29) equality -> . term op var_or_header
    (30) equality -> . term op term
    (31) equality -> . term op function
    (32) equality -> . equality COMMA equality
    (33) equality -> . equality op term
    (34) equality -> . equality op function
    (35) equality -> . equality COMMA var_or_header
    (36) equality -> . equality COMMA term
    (37) equality -> . equality COMMA function
    (45) assignment -> . var ASSIGNMENT var
    (46) assignment -> . var ASSIGNMENT term
    (47) assignment -> . var ASSIGNMENT function
    (48) assignment -> . var ASSIGNMENT header
    (56) var -> . VAR_SYM SIMPLE_NAME
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED

    SIMPLE_NAME     shift and go to state 8
    VAR_SYM         shift and go to state 15
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    HEADER_SYM      shift and go to state 20

    equality                       shift and go to state 9
    assignment_or_equality         shift and go to state 63
    function                       shift and go to state 64
    assignment                     shift and go to state 12
    term                           shift and go to state 10
    var_or_header                  shift and go to state 11
    var                            shift and go to state 13
    header                         shift and go to state 14

state 39

    (32) equality -> equality COMMA . equality
    (35) equality -> equality COMMA . var_or_header
    (36) equality -> equality COMMA . term
    (37) equality -> equality COMMA . function
    (44) op -> COMMA .
    (17) equality -> . function op term
    (18) equality -> . function op function
    (19) equality -> . function op var_or_header
    (20) equality -> . function DO assignment_or_equality
    (21) equality -> . var DO assignment_or_equality
    (22) equality -> . var DO function
    (23) equality -> . function DO function
    (24) equality -> . equality DO assignment_or_equality
    (25) equality -> . equality DO function
    (26) equality -> . var_or_header op function
    (27) equality -> . var_or_header op term
    (28) equality -> . var_or_header op var_or_header
    (29) equality -> . term op var_or_header
    (30) equality -> . term op term
    (31) equality -> . term op function
    (32) equality -> . equality COMMA equality
    (33) equality -> . equality op term
    (34) equality -> . equality op function
    (35) equality -> . equality COMMA var_or_header
    (36) equality -> . equality COMMA term
    (37) equality -> . equality COMMA function
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (56) var -> . VAR_SYM SIMPLE_NAME
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED

  ! shift/reduce conflict for QUOTED resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for REGEX resolved as shift
  ! shift/reduce conflict for SIMPLE_NAME resolved as shift
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    SIMPLE_NAME     shift and go to state 8
    VAR_SYM         shift and go to state 15
    HEADER_SYM      shift and go to state 20

  ! QUOTED          [ reduce using rule 44 (op -> COMMA .) ]
  ! QUOTE           [ reduce using rule 44 (op -> COMMA .) ]
  ! NUMBER          [ reduce using rule 44 (op -> COMMA .) ]
  ! REGEX           [ reduce using rule 44 (op -> COMMA .) ]
  ! SIMPLE_NAME     [ reduce using rule 44 (op -> COMMA .) ]

    equality                       shift and go to state 65
    var_or_header                  shift and go to state 66
    term                           shift and go to state 67
    function                       shift and go to state 68
    var                            shift and go to state 62
    header                         shift and go to state 14

state 40

    (33) equality -> equality op . term
    (34) equality -> equality op . function
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN

    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    SIMPLE_NAME     shift and go to state 8

    term                           shift and go to state 69
    function                       shift and go to state 70

state 41

    (29) equality -> term op . var_or_header
    (30) equality -> term op . term
    (31) equality -> term op . function
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED
    (56) var -> . VAR_SYM SIMPLE_NAME

    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    SIMPLE_NAME     shift and go to state 8
    HEADER_SYM      shift and go to state 20
    VAR_SYM         shift and go to state 15

    term                           shift and go to state 71
    var_or_header                  shift and go to state 72
    function                       shift and go to state 73
    header                         shift and go to state 14
    var                            shift and go to state 54

state 42

    (26) equality -> var_or_header op . function
    (27) equality -> var_or_header op . term
    (28) equality -> var_or_header op . var_or_header
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED
    (56) var -> . VAR_SYM SIMPLE_NAME

    SIMPLE_NAME     shift and go to state 8
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    HEADER_SYM      shift and go to state 20
    VAR_SYM         shift and go to state 15

    var_or_header                  shift and go to state 74
    function                       shift and go to state 75
    term                           shift and go to state 76
    header                         shift and go to state 14
    var                            shift and go to state 54

state 43

    (21) equality -> var DO . assignment_or_equality
    (22) equality -> var DO . function
    (15) assignment_or_equality -> . equality
    (16) assignment_or_equality -> . assignment
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (17) equality -> . function op term
    (18) equality -> . function op function
    (19) equality -> . function op var_or_header
    (20) equality -> . function DO assignment_or_equality
    (21) equality -> . var DO assignment_or_equality
    (22) equality -> . var DO function
    (23) equality -> . function DO function
    (24) equality -> . equality DO assignment_or_equality
    (25) equality -> . equality DO function
    (26) equality -> . var_or_header op function
    (27) equality -> . var_or_header op term
    (28) equality -> . var_or_header op var_or_header
    (29) equality -> . term op var_or_header
    (30) equality -> . term op term
    (31) equality -> . term op function
    (32) equality -> . equality COMMA equality
    (33) equality -> . equality op term
    (34) equality -> . equality op function
    (35) equality -> . equality COMMA var_or_header
    (36) equality -> . equality COMMA term
    (37) equality -> . equality COMMA function
    (45) assignment -> . var ASSIGNMENT var
    (46) assignment -> . var ASSIGNMENT term
    (47) assignment -> . var ASSIGNMENT function
    (48) assignment -> . var ASSIGNMENT header
    (56) var -> . VAR_SYM SIMPLE_NAME
    (54) var_or_header -> . header
    (55) var_or_header -> . var
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED

    SIMPLE_NAME     shift and go to state 8
    VAR_SYM         shift and go to state 15
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    HEADER_SYM      shift and go to state 20

    var                            shift and go to state 13
    assignment_or_equality         shift and go to state 77
    function                       shift and go to state 78
    equality                       shift and go to state 9
    assignment                     shift and go to state 12
    term                           shift and go to state 10
    var_or_header                  shift and go to state 11
    header                         shift and go to state 14

state 44

    (45) assignment -> var ASSIGNMENT . var
    (46) assignment -> var ASSIGNMENT . term
    (47) assignment -> var ASSIGNMENT . function
    (48) assignment -> var ASSIGNMENT . header
    (56) var -> . VAR_SYM SIMPLE_NAME
    (49) term -> . QUOTED
    (50) term -> . QUOTE DATE QUOTE
    (51) term -> . QUOTE NUMBER QUOTE
    (52) term -> . NUMBER
    (53) term -> . REGEX
    (10) function -> . SIMPLE_NAME OPEN_PAREN CLOSE_PAREN
    (11) function -> . SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN
    (12) function -> . SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN
    (13) function -> . SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN
    (14) function -> . SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN
    (57) header -> . HEADER_SYM SIMPLE_NAME
    (58) header -> . HEADER_SYM NUMBER
    (59) header -> . HEADER_SYM QUOTED

    VAR_SYM         shift and go to state 15
    QUOTED          shift and go to state 16
    QUOTE           shift and go to state 17
    NUMBER          shift and go to state 18
    REGEX           shift and go to state 19
    SIMPLE_NAME     shift and go to state 8
    HEADER_SYM      shift and go to state 20

    var                            shift and go to state 79
    term                           shift and go to state 80
    function                       shift and go to state 81
    header                         shift and go to state 82

state 45

    (56) var -> VAR_SYM SIMPLE_NAME .

    DO              reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    ASSIGNMENT      reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    EQUALS          reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    LT              reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    GT              reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    STAR            reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    PLUS            reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    MINUS           reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    COMMA           reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    RIGHT_BRACKET   reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    COMMENT         reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    SIMPLE_NAME     reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    VAR_SYM         reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    QUOTED          reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    QUOTE           reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    NUMBER          reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    REGEX           reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    HEADER_SYM      reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)
    CLOSE_PAREN     reduce using rule 56 (var -> VAR_SYM SIMPLE_NAME .)


state 46

    (50) term -> QUOTE DATE . QUOTE

    QUOTE           shift and go to state 83


state 47

    (51) term -> QUOTE NUMBER . QUOTE

    QUOTE           shift and go to state 84


state 48

    (57) header -> HEADER_SYM SIMPLE_NAME .

    EQUALS          reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    LT              reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    GT              reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    STAR            reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    PLUS            reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    MINUS           reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    COMMA           reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    DO              reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    RIGHT_BRACKET   reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    COMMENT         reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    SIMPLE_NAME     reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    VAR_SYM         reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    QUOTED          reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    QUOTE           reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    NUMBER          reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    REGEX           reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    HEADER_SYM      reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)
    CLOSE_PAREN     reduce using rule 57 (header -> HEADER_SYM SIMPLE_NAME .)


state 49

    (58) header -> HEADER_SYM NUMBER .

    EQUALS          reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    LT              reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    GT              reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    STAR            reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    PLUS            reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    MINUS           reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    COMMA           reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    DO              reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    RIGHT_BRACKET   reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    COMMENT         reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    SIMPLE_NAME     reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    VAR_SYM         reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    QUOTED          reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    QUOTE           reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    NUMBER          reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    REGEX           reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    HEADER_SYM      reduce using rule 58 (header -> HEADER_SYM NUMBER .)
    CLOSE_PAREN     reduce using rule 58 (header -> HEADER_SYM NUMBER .)


state 50

    (59) header -> HEADER_SYM QUOTED .

    EQUALS          reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    LT              reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    GT              reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    STAR            reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    PLUS            reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    MINUS           reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    COMMA           reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    DO              reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    RIGHT_BRACKET   reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    COMMENT         reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    SIMPLE_NAME     reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    VAR_SYM         reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    QUOTED          reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    QUOTE           reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    NUMBER          reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    REGEX           reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    HEADER_SYM      reduce using rule 59 (header -> HEADER_SYM QUOTED .)
    CLOSE_PAREN     reduce using rule 59 (header -> HEADER_SYM QUOTED .)


state 51

    (18) equality -> function op function .

    DO              reduce using rule 18 (equality -> function op function .)
    COMMA           reduce using rule 18 (equality -> function op function .)
    EQUALS          reduce using rule 18 (equality -> function op function .)
    LT              reduce using rule 18 (equality -> function op function .)
    GT              reduce using rule 18 (equality -> function op function .)
    STAR            reduce using rule 18 (equality -> function op function .)
    PLUS            reduce using rule 18 (equality -> function op function .)
    MINUS           reduce using rule 18 (equality -> function op function .)
    RIGHT_BRACKET   reduce using rule 18 (equality -> function op function .)
    COMMENT         reduce using rule 18 (equality -> function op function .)
    SIMPLE_NAME     reduce using rule 18 (equality -> function op function .)
    VAR_SYM         reduce using rule 18 (equality -> function op function .)
    QUOTED          reduce using rule 18 (equality -> function op function .)
    QUOTE           reduce using rule 18 (equality -> function op function .)
    NUMBER          reduce using rule 18 (equality -> function op function .)
    REGEX           reduce using rule 18 (equality -> function op function .)
    HEADER_SYM      reduce using rule 18 (equality -> function op function .)
    CLOSE_PAREN     reduce using rule 18 (equality -> function op function .)


state 52

    (17) equality -> function op term .

    DO              reduce using rule 17 (equality -> function op term .)
    COMMA           reduce using rule 17 (equality -> function op term .)
    EQUALS          reduce using rule 17 (equality -> function op term .)
    LT              reduce using rule 17 (equality -> function op term .)
    GT              reduce using rule 17 (equality -> function op term .)
    STAR            reduce using rule 17 (equality -> function op term .)
    PLUS            reduce using rule 17 (equality -> function op term .)
    MINUS           reduce using rule 17 (equality -> function op term .)
    RIGHT_BRACKET   reduce using rule 17 (equality -> function op term .)
    COMMENT         reduce using rule 17 (equality -> function op term .)
    SIMPLE_NAME     reduce using rule 17 (equality -> function op term .)
    VAR_SYM         reduce using rule 17 (equality -> function op term .)
    QUOTED          reduce using rule 17 (equality -> function op term .)
    QUOTE           reduce using rule 17 (equality -> function op term .)
    NUMBER          reduce using rule 17 (equality -> function op term .)
    REGEX           reduce using rule 17 (equality -> function op term .)
    HEADER_SYM      reduce using rule 17 (equality -> function op term .)
    CLOSE_PAREN     reduce using rule 17 (equality -> function op term .)


state 53

    (19) equality -> function op var_or_header .

    DO              reduce using rule 19 (equality -> function op var_or_header .)
    COMMA           reduce using rule 19 (equality -> function op var_or_header .)
    EQUALS          reduce using rule 19 (equality -> function op var_or_header .)
    LT              reduce using rule 19 (equality -> function op var_or_header .)
    GT              reduce using rule 19 (equality -> function op var_or_header .)
    STAR            reduce using rule 19 (equality -> function op var_or_header .)
    PLUS            reduce using rule 19 (equality -> function op var_or_header .)
    MINUS           reduce using rule 19 (equality -> function op var_or_header .)
    RIGHT_BRACKET   reduce using rule 19 (equality -> function op var_or_header .)
    COMMENT         reduce using rule 19 (equality -> function op var_or_header .)
    SIMPLE_NAME     reduce using rule 19 (equality -> function op var_or_header .)
    VAR_SYM         reduce using rule 19 (equality -> function op var_or_header .)
    QUOTED          reduce using rule 19 (equality -> function op var_or_header .)
    QUOTE           reduce using rule 19 (equality -> function op var_or_header .)
    NUMBER          reduce using rule 19 (equality -> function op var_or_header .)
    REGEX           reduce using rule 19 (equality -> function op var_or_header .)
    HEADER_SYM      reduce using rule 19 (equality -> function op var_or_header .)
    CLOSE_PAREN     reduce using rule 19 (equality -> function op var_or_header .)


state 54

    (55) var_or_header -> var .

    DO              reduce using rule 55 (var_or_header -> var .)
    COMMA           reduce using rule 55 (var_or_header -> var .)
    EQUALS          reduce using rule 55 (var_or_header -> var .)
    LT              reduce using rule 55 (var_or_header -> var .)
    GT              reduce using rule 55 (var_or_header -> var .)
    STAR            reduce using rule 55 (var_or_header -> var .)
    PLUS            reduce using rule 55 (var_or_header -> var .)
    MINUS           reduce using rule 55 (var_or_header -> var .)
    RIGHT_BRACKET   reduce using rule 55 (var_or_header -> var .)
    COMMENT         reduce using rule 55 (var_or_header -> var .)
    SIMPLE_NAME     reduce using rule 55 (var_or_header -> var .)
    VAR_SYM         reduce using rule 55 (var_or_header -> var .)
    QUOTED          reduce using rule 55 (var_or_header -> var .)
    QUOTE           reduce using rule 55 (var_or_header -> var .)
    NUMBER          reduce using rule 55 (var_or_header -> var .)
    REGEX           reduce using rule 55 (var_or_header -> var .)
    HEADER_SYM      reduce using rule 55 (var_or_header -> var .)
    CLOSE_PAREN     reduce using rule 55 (var_or_header -> var .)


state 55

    (23) equality -> function DO function .
    (17) equality -> function . op term
    (18) equality -> function . op function
    (19) equality -> function . op var_or_header
    (20) equality -> function . DO assignment_or_equality
    (23) equality -> function . DO function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RIGHT_BRACKET   reduce using rule 23 (equality -> function DO function .)
    COMMENT         reduce using rule 23 (equality -> function DO function .)
    SIMPLE_NAME     reduce using rule 23 (equality -> function DO function .)
    VAR_SYM         reduce using rule 23 (equality -> function DO function .)
    QUOTED          reduce using rule 23 (equality -> function DO function .)
    QUOTE           reduce using rule 23 (equality -> function DO function .)
    NUMBER          reduce using rule 23 (equality -> function DO function .)
    REGEX           reduce using rule 23 (equality -> function DO function .)
    HEADER_SYM      reduce using rule 23 (equality -> function DO function .)
    CLOSE_PAREN     reduce using rule 23 (equality -> function DO function .)
    DO              shift and go to state 27
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

  ! DO              [ reduce using rule 23 (equality -> function DO function .) ]
  ! COMMA           [ reduce using rule 23 (equality -> function DO function .) ]
  ! EQUALS          [ reduce using rule 23 (equality -> function DO function .) ]
  ! LT              [ reduce using rule 23 (equality -> function DO function .) ]
  ! GT              [ reduce using rule 23 (equality -> function DO function .) ]
  ! STAR            [ reduce using rule 23 (equality -> function DO function .) ]
  ! PLUS            [ reduce using rule 23 (equality -> function DO function .) ]
  ! MINUS           [ reduce using rule 23 (equality -> function DO function .) ]

    op                             shift and go to state 26

state 56

    (20) equality -> function DO assignment_or_equality .

    DO              reduce using rule 20 (equality -> function DO assignment_or_equality .)
    COMMA           reduce using rule 20 (equality -> function DO assignment_or_equality .)
    EQUALS          reduce using rule 20 (equality -> function DO assignment_or_equality .)
    LT              reduce using rule 20 (equality -> function DO assignment_or_equality .)
    GT              reduce using rule 20 (equality -> function DO assignment_or_equality .)
    STAR            reduce using rule 20 (equality -> function DO assignment_or_equality .)
    PLUS            reduce using rule 20 (equality -> function DO assignment_or_equality .)
    MINUS           reduce using rule 20 (equality -> function DO assignment_or_equality .)
    RIGHT_BRACKET   reduce using rule 20 (equality -> function DO assignment_or_equality .)
    COMMENT         reduce using rule 20 (equality -> function DO assignment_or_equality .)
    SIMPLE_NAME     reduce using rule 20 (equality -> function DO assignment_or_equality .)
    VAR_SYM         reduce using rule 20 (equality -> function DO assignment_or_equality .)
    QUOTED          reduce using rule 20 (equality -> function DO assignment_or_equality .)
    QUOTE           reduce using rule 20 (equality -> function DO assignment_or_equality .)
    NUMBER          reduce using rule 20 (equality -> function DO assignment_or_equality .)
    REGEX           reduce using rule 20 (equality -> function DO assignment_or_equality .)
    HEADER_SYM      reduce using rule 20 (equality -> function DO assignment_or_equality .)
    CLOSE_PAREN     reduce using rule 20 (equality -> function DO assignment_or_equality .)


state 57

    (10) function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .

    DO              reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    EQUALS          reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    LT              reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    GT              reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    STAR            reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    PLUS            reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    MINUS           reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    COMMA           reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    RIGHT_BRACKET   reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    COMMENT         reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    SIMPLE_NAME     reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    VAR_SYM         reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    QUOTED          reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    QUOTE           reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    NUMBER          reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    REGEX           reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    HEADER_SYM      reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 10 (function -> SIMPLE_NAME OPEN_PAREN CLOSE_PAREN .)


state 58

    (11) function -> SIMPLE_NAME OPEN_PAREN equality . CLOSE_PAREN
    (24) equality -> equality . DO assignment_or_equality
    (25) equality -> equality . DO function
    (32) equality -> equality . COMMA equality
    (33) equality -> equality . op term
    (34) equality -> equality . op function
    (35) equality -> equality . COMMA var_or_header
    (36) equality -> equality . COMMA term
    (37) equality -> equality . COMMA function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

    CLOSE_PAREN     shift and go to state 85
    DO              shift and go to state 38
    COMMA           shift and go to state 39
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33

    op                             shift and go to state 40

state 59

    (12) function -> SIMPLE_NAME OPEN_PAREN function . CLOSE_PAREN
    (17) equality -> function . op term
    (18) equality -> function . op function
    (19) equality -> function . op var_or_header
    (20) equality -> function . DO assignment_or_equality
    (23) equality -> function . DO function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

    CLOSE_PAREN     shift and go to state 86
    DO              shift and go to state 27
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

    op                             shift and go to state 26

state 60

    (13) function -> SIMPLE_NAME OPEN_PAREN term . CLOSE_PAREN
    (29) equality -> term . op var_or_header
    (30) equality -> term . op term
    (31) equality -> term . op function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

    CLOSE_PAREN     shift and go to state 87
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

    op                             shift and go to state 41

state 61

    (14) function -> SIMPLE_NAME OPEN_PAREN var_or_header . CLOSE_PAREN
    (26) equality -> var_or_header . op function
    (27) equality -> var_or_header . op term
    (28) equality -> var_or_header . op var_or_header
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

    CLOSE_PAREN     shift and go to state 88
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

    op                             shift and go to state 42

state 62

    (21) equality -> var . DO assignment_or_equality
    (22) equality -> var . DO function
    (55) var_or_header -> var .

  ! shift/reduce conflict for DO resolved as shift
    DO              shift and go to state 43
    CLOSE_PAREN     reduce using rule 55 (var_or_header -> var .)
    EQUALS          reduce using rule 55 (var_or_header -> var .)
    LT              reduce using rule 55 (var_or_header -> var .)
    GT              reduce using rule 55 (var_or_header -> var .)
    STAR            reduce using rule 55 (var_or_header -> var .)
    PLUS            reduce using rule 55 (var_or_header -> var .)
    MINUS           reduce using rule 55 (var_or_header -> var .)
    COMMA           reduce using rule 55 (var_or_header -> var .)
    RIGHT_BRACKET   reduce using rule 55 (var_or_header -> var .)
    COMMENT         reduce using rule 55 (var_or_header -> var .)
    SIMPLE_NAME     reduce using rule 55 (var_or_header -> var .)
    VAR_SYM         reduce using rule 55 (var_or_header -> var .)
    QUOTED          reduce using rule 55 (var_or_header -> var .)
    QUOTE           reduce using rule 55 (var_or_header -> var .)
    NUMBER          reduce using rule 55 (var_or_header -> var .)
    REGEX           reduce using rule 55 (var_or_header -> var .)
    HEADER_SYM      reduce using rule 55 (var_or_header -> var .)

  ! DO              [ reduce using rule 55 (var_or_header -> var .) ]


state 63

    (24) equality -> equality DO assignment_or_equality .

    DO              reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    COMMA           reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    EQUALS          reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    LT              reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    GT              reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    STAR            reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    PLUS            reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    MINUS           reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    RIGHT_BRACKET   reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    COMMENT         reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    SIMPLE_NAME     reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    VAR_SYM         reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    QUOTED          reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    QUOTE           reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    NUMBER          reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    REGEX           reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    HEADER_SYM      reduce using rule 24 (equality -> equality DO assignment_or_equality .)
    CLOSE_PAREN     reduce using rule 24 (equality -> equality DO assignment_or_equality .)


state 64

    (25) equality -> equality DO function .
    (17) equality -> function . op term
    (18) equality -> function . op function
    (19) equality -> function . op var_or_header
    (20) equality -> function . DO assignment_or_equality
    (23) equality -> function . DO function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RIGHT_BRACKET   reduce using rule 25 (equality -> equality DO function .)
    COMMENT         reduce using rule 25 (equality -> equality DO function .)
    SIMPLE_NAME     reduce using rule 25 (equality -> equality DO function .)
    VAR_SYM         reduce using rule 25 (equality -> equality DO function .)
    QUOTED          reduce using rule 25 (equality -> equality DO function .)
    QUOTE           reduce using rule 25 (equality -> equality DO function .)
    NUMBER          reduce using rule 25 (equality -> equality DO function .)
    REGEX           reduce using rule 25 (equality -> equality DO function .)
    HEADER_SYM      reduce using rule 25 (equality -> equality DO function .)
    CLOSE_PAREN     reduce using rule 25 (equality -> equality DO function .)
    DO              shift and go to state 27
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

  ! DO              [ reduce using rule 25 (equality -> equality DO function .) ]
  ! COMMA           [ reduce using rule 25 (equality -> equality DO function .) ]
  ! EQUALS          [ reduce using rule 25 (equality -> equality DO function .) ]
  ! LT              [ reduce using rule 25 (equality -> equality DO function .) ]
  ! GT              [ reduce using rule 25 (equality -> equality DO function .) ]
  ! STAR            [ reduce using rule 25 (equality -> equality DO function .) ]
  ! PLUS            [ reduce using rule 25 (equality -> equality DO function .) ]
  ! MINUS           [ reduce using rule 25 (equality -> equality DO function .) ]

    op                             shift and go to state 26

state 65

    (32) equality -> equality COMMA equality .
    (24) equality -> equality . DO assignment_or_equality
    (25) equality -> equality . DO function
    (32) equality -> equality . COMMA equality
    (33) equality -> equality . op term
    (34) equality -> equality . op function
    (35) equality -> equality . COMMA var_or_header
    (36) equality -> equality . COMMA term
    (37) equality -> equality . COMMA function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    RIGHT_BRACKET   reduce using rule 32 (equality -> equality COMMA equality .)
    COMMENT         reduce using rule 32 (equality -> equality COMMA equality .)
    SIMPLE_NAME     reduce using rule 32 (equality -> equality COMMA equality .)
    VAR_SYM         reduce using rule 32 (equality -> equality COMMA equality .)
    QUOTED          reduce using rule 32 (equality -> equality COMMA equality .)
    QUOTE           reduce using rule 32 (equality -> equality COMMA equality .)
    NUMBER          reduce using rule 32 (equality -> equality COMMA equality .)
    REGEX           reduce using rule 32 (equality -> equality COMMA equality .)
    HEADER_SYM      reduce using rule 32 (equality -> equality COMMA equality .)
    CLOSE_PAREN     reduce using rule 32 (equality -> equality COMMA equality .)
    DO              shift and go to state 38
    COMMA           shift and go to state 39
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33

  ! DO              [ reduce using rule 32 (equality -> equality COMMA equality .) ]
  ! COMMA           [ reduce using rule 32 (equality -> equality COMMA equality .) ]
  ! EQUALS          [ reduce using rule 32 (equality -> equality COMMA equality .) ]
  ! LT              [ reduce using rule 32 (equality -> equality COMMA equality .) ]
  ! GT              [ reduce using rule 32 (equality -> equality COMMA equality .) ]
  ! STAR            [ reduce using rule 32 (equality -> equality COMMA equality .) ]
  ! PLUS            [ reduce using rule 32 (equality -> equality COMMA equality .) ]
  ! MINUS           [ reduce using rule 32 (equality -> equality COMMA equality .) ]

    op                             shift and go to state 40

state 66

    (35) equality -> equality COMMA var_or_header .
    (26) equality -> var_or_header . op function
    (27) equality -> var_or_header . op term
    (28) equality -> var_or_header . op var_or_header
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    DO              reduce using rule 35 (equality -> equality COMMA var_or_header .)
    RIGHT_BRACKET   reduce using rule 35 (equality -> equality COMMA var_or_header .)
    COMMENT         reduce using rule 35 (equality -> equality COMMA var_or_header .)
    SIMPLE_NAME     reduce using rule 35 (equality -> equality COMMA var_or_header .)
    VAR_SYM         reduce using rule 35 (equality -> equality COMMA var_or_header .)
    QUOTED          reduce using rule 35 (equality -> equality COMMA var_or_header .)
    QUOTE           reduce using rule 35 (equality -> equality COMMA var_or_header .)
    NUMBER          reduce using rule 35 (equality -> equality COMMA var_or_header .)
    REGEX           reduce using rule 35 (equality -> equality COMMA var_or_header .)
    HEADER_SYM      reduce using rule 35 (equality -> equality COMMA var_or_header .)
    CLOSE_PAREN     reduce using rule 35 (equality -> equality COMMA var_or_header .)
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

  ! COMMA           [ reduce using rule 35 (equality -> equality COMMA var_or_header .) ]
  ! EQUALS          [ reduce using rule 35 (equality -> equality COMMA var_or_header .) ]
  ! LT              [ reduce using rule 35 (equality -> equality COMMA var_or_header .) ]
  ! GT              [ reduce using rule 35 (equality -> equality COMMA var_or_header .) ]
  ! STAR            [ reduce using rule 35 (equality -> equality COMMA var_or_header .) ]
  ! PLUS            [ reduce using rule 35 (equality -> equality COMMA var_or_header .) ]
  ! MINUS           [ reduce using rule 35 (equality -> equality COMMA var_or_header .) ]

    op                             shift and go to state 42

state 67

    (36) equality -> equality COMMA term .
    (29) equality -> term . op var_or_header
    (30) equality -> term . op term
    (31) equality -> term . op function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    DO              reduce using rule 36 (equality -> equality COMMA term .)
    RIGHT_BRACKET   reduce using rule 36 (equality -> equality COMMA term .)
    COMMENT         reduce using rule 36 (equality -> equality COMMA term .)
    SIMPLE_NAME     reduce using rule 36 (equality -> equality COMMA term .)
    VAR_SYM         reduce using rule 36 (equality -> equality COMMA term .)
    QUOTED          reduce using rule 36 (equality -> equality COMMA term .)
    QUOTE           reduce using rule 36 (equality -> equality COMMA term .)
    NUMBER          reduce using rule 36 (equality -> equality COMMA term .)
    REGEX           reduce using rule 36 (equality -> equality COMMA term .)
    HEADER_SYM      reduce using rule 36 (equality -> equality COMMA term .)
    CLOSE_PAREN     reduce using rule 36 (equality -> equality COMMA term .)
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

  ! COMMA           [ reduce using rule 36 (equality -> equality COMMA term .) ]
  ! EQUALS          [ reduce using rule 36 (equality -> equality COMMA term .) ]
  ! LT              [ reduce using rule 36 (equality -> equality COMMA term .) ]
  ! GT              [ reduce using rule 36 (equality -> equality COMMA term .) ]
  ! STAR            [ reduce using rule 36 (equality -> equality COMMA term .) ]
  ! PLUS            [ reduce using rule 36 (equality -> equality COMMA term .) ]
  ! MINUS           [ reduce using rule 36 (equality -> equality COMMA term .) ]

    op                             shift and go to state 41

state 68

    (37) equality -> equality COMMA function .
    (17) equality -> function . op term
    (18) equality -> function . op function
    (19) equality -> function . op var_or_header
    (20) equality -> function . DO assignment_or_equality
    (23) equality -> function . DO function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RIGHT_BRACKET   reduce using rule 37 (equality -> equality COMMA function .)
    COMMENT         reduce using rule 37 (equality -> equality COMMA function .)
    SIMPLE_NAME     reduce using rule 37 (equality -> equality COMMA function .)
    VAR_SYM         reduce using rule 37 (equality -> equality COMMA function .)
    QUOTED          reduce using rule 37 (equality -> equality COMMA function .)
    QUOTE           reduce using rule 37 (equality -> equality COMMA function .)
    NUMBER          reduce using rule 37 (equality -> equality COMMA function .)
    REGEX           reduce using rule 37 (equality -> equality COMMA function .)
    HEADER_SYM      reduce using rule 37 (equality -> equality COMMA function .)
    CLOSE_PAREN     reduce using rule 37 (equality -> equality COMMA function .)
    DO              shift and go to state 27
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

  ! DO              [ reduce using rule 37 (equality -> equality COMMA function .) ]
  ! COMMA           [ reduce using rule 37 (equality -> equality COMMA function .) ]
  ! EQUALS          [ reduce using rule 37 (equality -> equality COMMA function .) ]
  ! LT              [ reduce using rule 37 (equality -> equality COMMA function .) ]
  ! GT              [ reduce using rule 37 (equality -> equality COMMA function .) ]
  ! STAR            [ reduce using rule 37 (equality -> equality COMMA function .) ]
  ! PLUS            [ reduce using rule 37 (equality -> equality COMMA function .) ]
  ! MINUS           [ reduce using rule 37 (equality -> equality COMMA function .) ]

    op                             shift and go to state 26

state 69

    (33) equality -> equality op term .

    DO              reduce using rule 33 (equality -> equality op term .)
    COMMA           reduce using rule 33 (equality -> equality op term .)
    EQUALS          reduce using rule 33 (equality -> equality op term .)
    LT              reduce using rule 33 (equality -> equality op term .)
    GT              reduce using rule 33 (equality -> equality op term .)
    STAR            reduce using rule 33 (equality -> equality op term .)
    PLUS            reduce using rule 33 (equality -> equality op term .)
    MINUS           reduce using rule 33 (equality -> equality op term .)
    RIGHT_BRACKET   reduce using rule 33 (equality -> equality op term .)
    COMMENT         reduce using rule 33 (equality -> equality op term .)
    SIMPLE_NAME     reduce using rule 33 (equality -> equality op term .)
    VAR_SYM         reduce using rule 33 (equality -> equality op term .)
    QUOTED          reduce using rule 33 (equality -> equality op term .)
    QUOTE           reduce using rule 33 (equality -> equality op term .)
    NUMBER          reduce using rule 33 (equality -> equality op term .)
    REGEX           reduce using rule 33 (equality -> equality op term .)
    HEADER_SYM      reduce using rule 33 (equality -> equality op term .)
    CLOSE_PAREN     reduce using rule 33 (equality -> equality op term .)


state 70

    (34) equality -> equality op function .

    DO              reduce using rule 34 (equality -> equality op function .)
    COMMA           reduce using rule 34 (equality -> equality op function .)
    EQUALS          reduce using rule 34 (equality -> equality op function .)
    LT              reduce using rule 34 (equality -> equality op function .)
    GT              reduce using rule 34 (equality -> equality op function .)
    STAR            reduce using rule 34 (equality -> equality op function .)
    PLUS            reduce using rule 34 (equality -> equality op function .)
    MINUS           reduce using rule 34 (equality -> equality op function .)
    RIGHT_BRACKET   reduce using rule 34 (equality -> equality op function .)
    COMMENT         reduce using rule 34 (equality -> equality op function .)
    SIMPLE_NAME     reduce using rule 34 (equality -> equality op function .)
    VAR_SYM         reduce using rule 34 (equality -> equality op function .)
    QUOTED          reduce using rule 34 (equality -> equality op function .)
    QUOTE           reduce using rule 34 (equality -> equality op function .)
    NUMBER          reduce using rule 34 (equality -> equality op function .)
    REGEX           reduce using rule 34 (equality -> equality op function .)
    HEADER_SYM      reduce using rule 34 (equality -> equality op function .)
    CLOSE_PAREN     reduce using rule 34 (equality -> equality op function .)


state 71

    (30) equality -> term op term .

    DO              reduce using rule 30 (equality -> term op term .)
    COMMA           reduce using rule 30 (equality -> term op term .)
    EQUALS          reduce using rule 30 (equality -> term op term .)
    LT              reduce using rule 30 (equality -> term op term .)
    GT              reduce using rule 30 (equality -> term op term .)
    STAR            reduce using rule 30 (equality -> term op term .)
    PLUS            reduce using rule 30 (equality -> term op term .)
    MINUS           reduce using rule 30 (equality -> term op term .)
    RIGHT_BRACKET   reduce using rule 30 (equality -> term op term .)
    COMMENT         reduce using rule 30 (equality -> term op term .)
    SIMPLE_NAME     reduce using rule 30 (equality -> term op term .)
    VAR_SYM         reduce using rule 30 (equality -> term op term .)
    QUOTED          reduce using rule 30 (equality -> term op term .)
    QUOTE           reduce using rule 30 (equality -> term op term .)
    NUMBER          reduce using rule 30 (equality -> term op term .)
    REGEX           reduce using rule 30 (equality -> term op term .)
    HEADER_SYM      reduce using rule 30 (equality -> term op term .)
    CLOSE_PAREN     reduce using rule 30 (equality -> term op term .)


state 72

    (29) equality -> term op var_or_header .

    DO              reduce using rule 29 (equality -> term op var_or_header .)
    COMMA           reduce using rule 29 (equality -> term op var_or_header .)
    EQUALS          reduce using rule 29 (equality -> term op var_or_header .)
    LT              reduce using rule 29 (equality -> term op var_or_header .)
    GT              reduce using rule 29 (equality -> term op var_or_header .)
    STAR            reduce using rule 29 (equality -> term op var_or_header .)
    PLUS            reduce using rule 29 (equality -> term op var_or_header .)
    MINUS           reduce using rule 29 (equality -> term op var_or_header .)
    RIGHT_BRACKET   reduce using rule 29 (equality -> term op var_or_header .)
    COMMENT         reduce using rule 29 (equality -> term op var_or_header .)
    SIMPLE_NAME     reduce using rule 29 (equality -> term op var_or_header .)
    VAR_SYM         reduce using rule 29 (equality -> term op var_or_header .)
    QUOTED          reduce using rule 29 (equality -> term op var_or_header .)
    QUOTE           reduce using rule 29 (equality -> term op var_or_header .)
    NUMBER          reduce using rule 29 (equality -> term op var_or_header .)
    REGEX           reduce using rule 29 (equality -> term op var_or_header .)
    HEADER_SYM      reduce using rule 29 (equality -> term op var_or_header .)
    CLOSE_PAREN     reduce using rule 29 (equality -> term op var_or_header .)


state 73

    (31) equality -> term op function .

    DO              reduce using rule 31 (equality -> term op function .)
    COMMA           reduce using rule 31 (equality -> term op function .)
    EQUALS          reduce using rule 31 (equality -> term op function .)
    LT              reduce using rule 31 (equality -> term op function .)
    GT              reduce using rule 31 (equality -> term op function .)
    STAR            reduce using rule 31 (equality -> term op function .)
    PLUS            reduce using rule 31 (equality -> term op function .)
    MINUS           reduce using rule 31 (equality -> term op function .)
    RIGHT_BRACKET   reduce using rule 31 (equality -> term op function .)
    COMMENT         reduce using rule 31 (equality -> term op function .)
    SIMPLE_NAME     reduce using rule 31 (equality -> term op function .)
    VAR_SYM         reduce using rule 31 (equality -> term op function .)
    QUOTED          reduce using rule 31 (equality -> term op function .)
    QUOTE           reduce using rule 31 (equality -> term op function .)
    NUMBER          reduce using rule 31 (equality -> term op function .)
    REGEX           reduce using rule 31 (equality -> term op function .)
    HEADER_SYM      reduce using rule 31 (equality -> term op function .)
    CLOSE_PAREN     reduce using rule 31 (equality -> term op function .)


state 74

    (28) equality -> var_or_header op var_or_header .

    DO              reduce using rule 28 (equality -> var_or_header op var_or_header .)
    COMMA           reduce using rule 28 (equality -> var_or_header op var_or_header .)
    EQUALS          reduce using rule 28 (equality -> var_or_header op var_or_header .)
    LT              reduce using rule 28 (equality -> var_or_header op var_or_header .)
    GT              reduce using rule 28 (equality -> var_or_header op var_or_header .)
    STAR            reduce using rule 28 (equality -> var_or_header op var_or_header .)
    PLUS            reduce using rule 28 (equality -> var_or_header op var_or_header .)
    MINUS           reduce using rule 28 (equality -> var_or_header op var_or_header .)
    RIGHT_BRACKET   reduce using rule 28 (equality -> var_or_header op var_or_header .)
    COMMENT         reduce using rule 28 (equality -> var_or_header op var_or_header .)
    SIMPLE_NAME     reduce using rule 28 (equality -> var_or_header op var_or_header .)
    VAR_SYM         reduce using rule 28 (equality -> var_or_header op var_or_header .)
    QUOTED          reduce using rule 28 (equality -> var_or_header op var_or_header .)
    QUOTE           reduce using rule 28 (equality -> var_or_header op var_or_header .)
    NUMBER          reduce using rule 28 (equality -> var_or_header op var_or_header .)
    REGEX           reduce using rule 28 (equality -> var_or_header op var_or_header .)
    HEADER_SYM      reduce using rule 28 (equality -> var_or_header op var_or_header .)
    CLOSE_PAREN     reduce using rule 28 (equality -> var_or_header op var_or_header .)


state 75

    (26) equality -> var_or_header op function .

    DO              reduce using rule 26 (equality -> var_or_header op function .)
    COMMA           reduce using rule 26 (equality -> var_or_header op function .)
    EQUALS          reduce using rule 26 (equality -> var_or_header op function .)
    LT              reduce using rule 26 (equality -> var_or_header op function .)
    GT              reduce using rule 26 (equality -> var_or_header op function .)
    STAR            reduce using rule 26 (equality -> var_or_header op function .)
    PLUS            reduce using rule 26 (equality -> var_or_header op function .)
    MINUS           reduce using rule 26 (equality -> var_or_header op function .)
    RIGHT_BRACKET   reduce using rule 26 (equality -> var_or_header op function .)
    COMMENT         reduce using rule 26 (equality -> var_or_header op function .)
    SIMPLE_NAME     reduce using rule 26 (equality -> var_or_header op function .)
    VAR_SYM         reduce using rule 26 (equality -> var_or_header op function .)
    QUOTED          reduce using rule 26 (equality -> var_or_header op function .)
    QUOTE           reduce using rule 26 (equality -> var_or_header op function .)
    NUMBER          reduce using rule 26 (equality -> var_or_header op function .)
    REGEX           reduce using rule 26 (equality -> var_or_header op function .)
    HEADER_SYM      reduce using rule 26 (equality -> var_or_header op function .)
    CLOSE_PAREN     reduce using rule 26 (equality -> var_or_header op function .)


state 76

    (27) equality -> var_or_header op term .

    DO              reduce using rule 27 (equality -> var_or_header op term .)
    COMMA           reduce using rule 27 (equality -> var_or_header op term .)
    EQUALS          reduce using rule 27 (equality -> var_or_header op term .)
    LT              reduce using rule 27 (equality -> var_or_header op term .)
    GT              reduce using rule 27 (equality -> var_or_header op term .)
    STAR            reduce using rule 27 (equality -> var_or_header op term .)
    PLUS            reduce using rule 27 (equality -> var_or_header op term .)
    MINUS           reduce using rule 27 (equality -> var_or_header op term .)
    RIGHT_BRACKET   reduce using rule 27 (equality -> var_or_header op term .)
    COMMENT         reduce using rule 27 (equality -> var_or_header op term .)
    SIMPLE_NAME     reduce using rule 27 (equality -> var_or_header op term .)
    VAR_SYM         reduce using rule 27 (equality -> var_or_header op term .)
    QUOTED          reduce using rule 27 (equality -> var_or_header op term .)
    QUOTE           reduce using rule 27 (equality -> var_or_header op term .)
    NUMBER          reduce using rule 27 (equality -> var_or_header op term .)
    REGEX           reduce using rule 27 (equality -> var_or_header op term .)
    HEADER_SYM      reduce using rule 27 (equality -> var_or_header op term .)
    CLOSE_PAREN     reduce using rule 27 (equality -> var_or_header op term .)


state 77

    (21) equality -> var DO assignment_or_equality .

    DO              reduce using rule 21 (equality -> var DO assignment_or_equality .)
    COMMA           reduce using rule 21 (equality -> var DO assignment_or_equality .)
    EQUALS          reduce using rule 21 (equality -> var DO assignment_or_equality .)
    LT              reduce using rule 21 (equality -> var DO assignment_or_equality .)
    GT              reduce using rule 21 (equality -> var DO assignment_or_equality .)
    STAR            reduce using rule 21 (equality -> var DO assignment_or_equality .)
    PLUS            reduce using rule 21 (equality -> var DO assignment_or_equality .)
    MINUS           reduce using rule 21 (equality -> var DO assignment_or_equality .)
    RIGHT_BRACKET   reduce using rule 21 (equality -> var DO assignment_or_equality .)
    COMMENT         reduce using rule 21 (equality -> var DO assignment_or_equality .)
    SIMPLE_NAME     reduce using rule 21 (equality -> var DO assignment_or_equality .)
    VAR_SYM         reduce using rule 21 (equality -> var DO assignment_or_equality .)
    QUOTED          reduce using rule 21 (equality -> var DO assignment_or_equality .)
    QUOTE           reduce using rule 21 (equality -> var DO assignment_or_equality .)
    NUMBER          reduce using rule 21 (equality -> var DO assignment_or_equality .)
    REGEX           reduce using rule 21 (equality -> var DO assignment_or_equality .)
    HEADER_SYM      reduce using rule 21 (equality -> var DO assignment_or_equality .)
    CLOSE_PAREN     reduce using rule 21 (equality -> var DO assignment_or_equality .)


state 78

    (22) equality -> var DO function .
    (17) equality -> function . op term
    (18) equality -> function . op function
    (19) equality -> function . op var_or_header
    (20) equality -> function . DO assignment_or_equality
    (23) equality -> function . DO function
    (38) op -> . EQUALS
    (39) op -> . LT
    (40) op -> . GT
    (41) op -> . STAR
    (42) op -> . PLUS
    (43) op -> . MINUS
    (44) op -> . COMMA

  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RIGHT_BRACKET   reduce using rule 22 (equality -> var DO function .)
    COMMENT         reduce using rule 22 (equality -> var DO function .)
    SIMPLE_NAME     reduce using rule 22 (equality -> var DO function .)
    VAR_SYM         reduce using rule 22 (equality -> var DO function .)
    QUOTED          reduce using rule 22 (equality -> var DO function .)
    QUOTE           reduce using rule 22 (equality -> var DO function .)
    NUMBER          reduce using rule 22 (equality -> var DO function .)
    REGEX           reduce using rule 22 (equality -> var DO function .)
    HEADER_SYM      reduce using rule 22 (equality -> var DO function .)
    CLOSE_PAREN     reduce using rule 22 (equality -> var DO function .)
    DO              shift and go to state 27
    EQUALS          shift and go to state 28
    LT              shift and go to state 29
    GT              shift and go to state 30
    STAR            shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    COMMA           shift and go to state 34

  ! DO              [ reduce using rule 22 (equality -> var DO function .) ]
  ! COMMA           [ reduce using rule 22 (equality -> var DO function .) ]
  ! EQUALS          [ reduce using rule 22 (equality -> var DO function .) ]
  ! LT              [ reduce using rule 22 (equality -> var DO function .) ]
  ! GT              [ reduce using rule 22 (equality -> var DO function .) ]
  ! STAR            [ reduce using rule 22 (equality -> var DO function .) ]
  ! PLUS            [ reduce using rule 22 (equality -> var DO function .) ]
  ! MINUS           [ reduce using rule 22 (equality -> var DO function .) ]

    op                             shift and go to state 26

state 79

    (45) assignment -> var ASSIGNMENT var .

    RIGHT_BRACKET   reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    COMMENT         reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    SIMPLE_NAME     reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    VAR_SYM         reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    QUOTED          reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    QUOTE           reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    NUMBER          reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    REGEX           reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    HEADER_SYM      reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    DO              reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    COMMA           reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    EQUALS          reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    LT              reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    GT              reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    STAR            reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    PLUS            reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    MINUS           reduce using rule 45 (assignment -> var ASSIGNMENT var .)
    CLOSE_PAREN     reduce using rule 45 (assignment -> var ASSIGNMENT var .)


state 80

    (46) assignment -> var ASSIGNMENT term .

    RIGHT_BRACKET   reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    COMMENT         reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    SIMPLE_NAME     reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    VAR_SYM         reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    QUOTED          reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    QUOTE           reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    NUMBER          reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    REGEX           reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    HEADER_SYM      reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    DO              reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    COMMA           reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    EQUALS          reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    LT              reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    GT              reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    STAR            reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    PLUS            reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    MINUS           reduce using rule 46 (assignment -> var ASSIGNMENT term .)
    CLOSE_PAREN     reduce using rule 46 (assignment -> var ASSIGNMENT term .)


state 81

    (47) assignment -> var ASSIGNMENT function .

    RIGHT_BRACKET   reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    COMMENT         reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    SIMPLE_NAME     reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    VAR_SYM         reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    QUOTED          reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    QUOTE           reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    NUMBER          reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    REGEX           reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    HEADER_SYM      reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    DO              reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    COMMA           reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    EQUALS          reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    LT              reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    GT              reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    STAR            reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    PLUS            reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    MINUS           reduce using rule 47 (assignment -> var ASSIGNMENT function .)
    CLOSE_PAREN     reduce using rule 47 (assignment -> var ASSIGNMENT function .)


state 82

    (48) assignment -> var ASSIGNMENT header .

    RIGHT_BRACKET   reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    COMMENT         reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    SIMPLE_NAME     reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    VAR_SYM         reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    QUOTED          reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    QUOTE           reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    NUMBER          reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    REGEX           reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    HEADER_SYM      reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    DO              reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    COMMA           reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    EQUALS          reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    LT              reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    GT              reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    STAR            reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    PLUS            reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    MINUS           reduce using rule 48 (assignment -> var ASSIGNMENT header .)
    CLOSE_PAREN     reduce using rule 48 (assignment -> var ASSIGNMENT header .)


state 83

    (50) term -> QUOTE DATE QUOTE .

    EQUALS          reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    LT              reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    GT              reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    STAR            reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    PLUS            reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    MINUS           reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    COMMA           reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    DO              reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    RIGHT_BRACKET   reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    COMMENT         reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    SIMPLE_NAME     reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    VAR_SYM         reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    QUOTED          reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    QUOTE           reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    NUMBER          reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    REGEX           reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    HEADER_SYM      reduce using rule 50 (term -> QUOTE DATE QUOTE .)
    CLOSE_PAREN     reduce using rule 50 (term -> QUOTE DATE QUOTE .)


state 84

    (51) term -> QUOTE NUMBER QUOTE .

    EQUALS          reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    LT              reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    GT              reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    STAR            reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    PLUS            reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    MINUS           reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    COMMA           reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    DO              reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    RIGHT_BRACKET   reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    COMMENT         reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    SIMPLE_NAME     reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    VAR_SYM         reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    QUOTED          reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    QUOTE           reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    NUMBER          reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    REGEX           reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    HEADER_SYM      reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)
    CLOSE_PAREN     reduce using rule 51 (term -> QUOTE NUMBER QUOTE .)


state 85

    (11) function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .

    DO              reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    EQUALS          reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    LT              reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    GT              reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    STAR            reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    PLUS            reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    MINUS           reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    COMMA           reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    RIGHT_BRACKET   reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    COMMENT         reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    SIMPLE_NAME     reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    VAR_SYM         reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    QUOTED          reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    QUOTE           reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    NUMBER          reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    REGEX           reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    HEADER_SYM      reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 11 (function -> SIMPLE_NAME OPEN_PAREN equality CLOSE_PAREN .)


state 86

    (12) function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .

    DO              reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    EQUALS          reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    LT              reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    GT              reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    STAR            reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    PLUS            reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    MINUS           reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    COMMA           reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    RIGHT_BRACKET   reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    COMMENT         reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    SIMPLE_NAME     reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    VAR_SYM         reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    QUOTED          reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    QUOTE           reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    NUMBER          reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    REGEX           reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    HEADER_SYM      reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 12 (function -> SIMPLE_NAME OPEN_PAREN function CLOSE_PAREN .)


state 87

    (13) function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .

    DO              reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    EQUALS          reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    LT              reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    GT              reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    STAR            reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    PLUS            reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    MINUS           reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    COMMA           reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    RIGHT_BRACKET   reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    COMMENT         reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    SIMPLE_NAME     reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    VAR_SYM         reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    QUOTED          reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    QUOTE           reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    NUMBER          reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    REGEX           reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    HEADER_SYM      reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 13 (function -> SIMPLE_NAME OPEN_PAREN term CLOSE_PAREN .)


state 88

    (14) function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .

    DO              reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    EQUALS          reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    LT              reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    GT              reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    STAR            reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    PLUS            reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    MINUS           reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    COMMA           reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    RIGHT_BRACKET   reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    COMMENT         reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    SIMPLE_NAME     reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    VAR_SYM         reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    QUOTED          reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    QUOTE           reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    NUMBER          reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    REGEX           reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    HEADER_SYM      reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)
    CLOSE_PAREN     reduce using rule 14 (function -> SIMPLE_NAME OPEN_PAREN var_or_header CLOSE_PAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RIGHT_BRACKET in state 3 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 3 resolved as shift
WARNING: shift/reduce conflict for DO in state 9 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 9 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 9 resolved as shift
WARNING: shift/reduce conflict for LT in state 9 resolved as shift
WARNING: shift/reduce conflict for GT in state 9 resolved as shift
WARNING: shift/reduce conflict for STAR in state 9 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 9 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 9 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 35 resolved as shift
WARNING: shift/reduce conflict for SIMPLE_NAME in state 35 resolved as shift
WARNING: shift/reduce conflict for VAR_SYM in state 35 resolved as shift
WARNING: shift/reduce conflict for QUOTED in state 35 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 35 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 35 resolved as shift
WARNING: shift/reduce conflict for REGEX in state 35 resolved as shift
WARNING: shift/reduce conflict for HEADER_SYM in state 35 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 36 resolved as shift
WARNING: shift/reduce conflict for QUOTED in state 39 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 39 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 39 resolved as shift
WARNING: shift/reduce conflict for REGEX in state 39 resolved as shift
WARNING: shift/reduce conflict for SIMPLE_NAME in state 39 resolved as shift
WARNING: shift/reduce conflict for DO in state 55 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 55 resolved as shift
WARNING: shift/reduce conflict for LT in state 55 resolved as shift
WARNING: shift/reduce conflict for GT in state 55 resolved as shift
WARNING: shift/reduce conflict for STAR in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 55 resolved as shift
WARNING: shift/reduce conflict for DO in state 62 resolved as shift
WARNING: shift/reduce conflict for DO in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for LT in state 64 resolved as shift
WARNING: shift/reduce conflict for GT in state 64 resolved as shift
WARNING: shift/reduce conflict for STAR in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 64 resolved as shift
WARNING: shift/reduce conflict for DO in state 65 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for LT in state 65 resolved as shift
WARNING: shift/reduce conflict for GT in state 65 resolved as shift
WARNING: shift/reduce conflict for STAR in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for LT in state 66 resolved as shift
WARNING: shift/reduce conflict for GT in state 66 resolved as shift
WARNING: shift/reduce conflict for STAR in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 66 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for LT in state 67 resolved as shift
WARNING: shift/reduce conflict for GT in state 67 resolved as shift
WARNING: shift/reduce conflict for STAR in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 67 resolved as shift
WARNING: shift/reduce conflict for DO in state 68 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 68 resolved as shift
WARNING: shift/reduce conflict for LT in state 68 resolved as shift
WARNING: shift/reduce conflict for GT in state 68 resolved as shift
WARNING: shift/reduce conflict for STAR in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 68 resolved as shift
WARNING: shift/reduce conflict for DO in state 78 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 78 resolved as shift
WARNING: shift/reduce conflict for LT in state 78 resolved as shift
WARNING: shift/reduce conflict for GT in state 78 resolved as shift
WARNING: shift/reduce conflict for STAR in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 78 resolved as shift
